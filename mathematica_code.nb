(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    266421,       6011]
NotebookOptionsPosition[    261709,       5925]
NotebookOutlinePosition[    262176,       5943]
CellTagsIndexPosition[    262133,       5940]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions init (inizialization cells)", "Section",
 CellChangeTimes->{{3.839671180673484*^9, 3.839671187202901*^9}, {
  3.839766998127668*^9, 
  3.8397670462785063`*^9}},ExpressionUUID->"2d257552-89d8-4824-8810-\
853e93dab373"],

Cell[TextData[{
 "in this cell are defined the functions ",
 StyleBox["gkr[mag]",
  FontWeight->"Bold"],
 " (spatial radius) and ",
 StyleBox["gkt[mag]",
  FontWeight->"Bold"],
 " (time interval) for criteria 2 and 3 as continuous interpolations from \
Gardner and Knopoff tables."
}], "Text",
 CellChangeTimes->{{3.839671205856875*^9, 3.839671267039278*^9}, {
  3.839671329722797*^9, 3.839671393953458*^9}, {3.839671431287848*^9, 
  3.839671496853875*^9}},ExpressionUUID->"4318576f-3a1d-429e-866c-\
94e506562991"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Gardner", " ", "and", " ", "Knopoff", " ", "tables"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gardnerknopofflist", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "2.5", ",", "3", ",", "3.5", ",", "4", ",", "4.5", ",", "5", ",", 
          "5.5", ",", "6", ",", "6.5", ",", "7", ",", "7.5", ",", "8"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "19.5", ",", "22.5", ",", "26", ",", "30", ",", "35", ",", "40", ",",
           "47", ",", "54", ",", "61", ",", "70", ",", "81", ",", "94"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "6", ",", "11.5", ",", "22", ",", "42", ",", "83", ",", "155", ",", 
          "290", ",", "510", ",", "790", ",", "915", ",", "960", ",", "985"}],
          "}"}]}], "}"}], "\[Transpose]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"gkr", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"gardnerknopofflist", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "fixed", " ", "to", " ", "1", " ", "to", " ", "ensure", " ", 
      "compatibility", " ", "with", " ", "python", " ", "porting"}], " ", 
     "*)"}], "\n", 
    RowBox[{"gkt", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"gardnerknopofflist", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "/.", 
        
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m_", ",", "t_"}], "}"}], "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"t", "/", "365"}]}], "}"}]}]}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7353698625744977`*^9, 3.735369972497489*^9}, {
   3.7353700445806966`*^9, 3.7353700586471033`*^9}, {3.7353703597632113`*^9, 
   3.735370362674503*^9}, {3.7353704101972547`*^9, 3.735370434262661*^9}, {
   3.73538702967519*^9, 3.735387030478389*^9}, 3.735388020262169*^9, {
   3.735444880533826*^9, 3.7354448875215244`*^9}, {3.735534209369173*^9, 
   3.7355342339156275`*^9}, {3.7355358850727267`*^9, 3.735535913058525*^9}, {
   3.736574344298894*^9, 3.7365743899974637`*^9}, {3.736662908466707*^9, 
   3.736662911313992*^9}, {3.737113151210204*^9, 3.737113153068878*^9}, 
   3.7371923278886833`*^9, {3.737696511539801*^9, 3.7376965211038013`*^9}, {
   3.826217187009108*^9, 3.8262172117686787`*^9}, {3.826217282605549*^9, 
   3.8262172909955378`*^9}, {3.826217349447217*^9, 3.8262173560789013`*^9}, {
   3.8396710420951643`*^9, 3.839671044329245*^9}, 3.839671128512809*^9, {
   3.839671291492392*^9, 3.839671303130348*^9}, {3.839671502210697*^9, 
   3.839671532584841*^9}, {3.8396748338336487`*^9, 3.8396748385100946`*^9}, {
   3.839915820619755*^9, 3.839915823556575*^9}, {3.89485997722113*^9, 
   3.894860007413221*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"dd1bbe55-77a3-4a41-877c-3a24b383fa6c"],

Cell[TextData[{
 "This cell defines a fast algorithm to convert {lat, long}  to {x,y} pairs \
obtained projecting spherical coordinates onto the plane parallel to the \
sphere at a certain median point ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["lat", "0"], ",", 
        SubscriptBox["lon", "0"]}], "}"}], " ", "\[LongRightArrow]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"]}], "}"}]}], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
    RowBox[{"coordinates", " ", "origin"}]}], TraditionalForm]],
  ExpressionUUID->"320b2644-db93-4b02-b084-a8e2c684debf"],
 ". However, any type of similar trasformations (e.g. fast UTM) can be used \
since we actually care only about distances between couples of events."
}], "Text",
 CellChangeTimes->{{3.839671570369713*^9, 3.839671823643355*^9}, {
  3.8396722654687557`*^9, 3.839672404986759*^9}, {3.875596555001213*^9, 
  3.8755966203750677`*^9}},ExpressionUUID->"f0f5c79a-4225-4f7c-b31b-\
e7ea4bc1b21a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Function"}], " ", 
      RowBox[{"definition", ":", " ", "\[Phi]"}]}], " ", "\[Rule]", " ", 
     "latitude"}], ",", " ", 
    RowBox[{"\[Lambda]", " ", "\[Rule]", " ", "longitude"}]}], " ", "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"caloir2g", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]0_", ",", "\[Lambda]0_"}], "}"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"y", " ", "\[Alpha]"}], "r"], "+", "\[Phi]0", "-", 
        FractionBox[
         RowBox[{"0.5`", " ", 
          SuperscriptBox["x", "2"], " ", "\[Alpha]", " ", 
          RowBox[{"Tan", "[", 
           FractionBox["\[Phi]0", "\[Alpha]"], "]"}]}], 
         SuperscriptBox["r", "2"]]}], ",", 
       RowBox[{"\[Lambda]0", "+", 
        FractionBox[
         RowBox[{"x", " ", "\[Alpha]", " ", 
          RowBox[{"Sec", "[", 
           FractionBox[
            RowBox[{
             FractionBox[
              RowBox[{"y", " ", "\[Alpha]"}], "r"], "+", "\[Phi]0"}], 
            "\[Alpha]"], "]"}]}], "r"], "-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           SuperscriptBox["x", "3"], " ", "\[Alpha]", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"y", " ", "\[Alpha]"}], "r"], "+", "\[Phi]0"}], 
             "\[Alpha]"], "]"}], " ", 
           RowBox[{"Tan", "[", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"y", " ", "\[Alpha]"}], "r"], "+", "\[Phi]0"}], 
             "\[Alpha]"], "]"}]}]}], 
         RowBox[{"3", " ", 
          SuperscriptBox["r", "3"]}]]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["180", "\[Pi]"]}], ",", 
       RowBox[{"r", "\[Rule]", "6367"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"caloig2r", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Phi]_", ",", "\[Lambda]_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]0_", ",", "\[Lambda]0_"}], "}"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Phi]", "\[Alpha]"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]", "-", "\[Lambda]0"}], ")"}]}], "\[Alpha]"], 
        "-", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Phi]", "\[Alpha]"], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             FractionBox["\[Phi]", "\[Alpha]"], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Lambda]", "-", "\[Lambda]0"}], ")"}], "3"]}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Alpha]", "3"]}]]}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2.`", " ", "\[Phi]"}], "\[Alpha]"], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Lambda]", "-", "\[Lambda]0"}], ")"}], "2"]}], 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Alpha]", "2"]}]], "+", 
        FractionBox[
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"\[Phi]", "-", "\[Phi]0"}], ")"}]}], "\[Alpha]"]}]}], 
      "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["180", "\[Pi]"]}], ",", 
       RowBox[{"r", "\[Rule]", "6367"}]}], "}"}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.820781353337365*^9, 3.8207813888469143`*^9}, {
   3.820781903098702*^9, 3.820781916580435*^9}, {3.82078234997508*^9, 
   3.820782394015123*^9}, 3.820836954849064*^9, {3.8396718344080257`*^9, 
   3.839671854155649*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0c866893-59fb-4cb2-9bc2-7915aa8b5ecf"],

Cell[TextData[{
 "this cell compiles ",
 StyleBox["caloir2g",
  FontWeight->"Bold"],
 " and ",
 StyleBox["caloig2r",
  FontWeight->"Bold"],
 " functions and links them to the commands ",
 StyleBox["r2g",
  FontWeight->"Bold"],
 " and ",
 StyleBox["g2r",
  FontWeight->"Bold"],
 " respectively (a C compiler must be present in the system)\nIf compilation \
fails the original (much slower) function caloir2g can be used in the orig \
list definition (just remove the ",
 StyleBox["(*",
  FontWeight->"Bold"],
 " and ",
 StyleBox["*)",
  FontWeight->"Bold"],
 " comment delimiters ):\n",
 StyleBox["orig=raw/.{t1_?NumberQ,lat_,lon_,dep_,mag1_,_}\[RuleDelayed]{t1,\
Append[", "Input"],
 StyleBox["(*", "Input",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["caloi", "Input"],
 StyleBox["*)", "Input",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["g2r[{lat,lon},offs],dep],mag1,i++}", "Input"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.8397670578125553`*^9, 3.839767211334539*^9}, {
  3.839767286295102*^9, 3.839767341655191*^9}, {3.839768175305563*^9, 
  3.839768182853517*^9}, {3.8397684122156277`*^9, 
  3.8397685147133636`*^9}},ExpressionUUID->"53333f2b-a420-4f31-b57a-\
3138c7e85cb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Function"}], " ", "compilation", " ", "in", " ", "C", 
    " ", 
    RowBox[{"executable", ":", " ", 
     RowBox[{
     "useful", " ", "for", " ", "very", " ", "large", " ", "catalogs"}]}]}], 
   " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r2g", "=", 
     RowBox[{"Quiet", "@", 
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xy", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Phi]\[Lambda]0", ",", "_Real", ",", "1"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"Evaluate", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"180", " ", 
              RowBox[{
              "xy", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             
             RowBox[{"6367", " ", "\[Pi]"}]], "+", 
            RowBox[{
            "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "-", 
            RowBox[{"7.066802223560106`*^-7", " ", 
             SuperscriptBox[
              RowBox[{
              "xy", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "2"], " ", 
             RowBox[{"Tan", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", 
                RowBox[{
                "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "180"], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
            "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}], "+", 
            FractionBox[
             RowBox[{"180", " ", 
              RowBox[{
              "xy", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", 
              RowBox[{"Sec", "[", 
               RowBox[{
                FractionBox["1", "180"], " ", "\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"180", " ", 
                    RowBox[{
                    "xy", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], 
                   RowBox[{"6367", " ", "\[Pi]"}]], "+", 
                  RowBox[{
                  "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ")"}]}], "]"}]}], 
             RowBox[{"6367", " ", "\[Pi]"}]], "-", 
            FractionBox[
             RowBox[{"60", " ", 
              SuperscriptBox[
               RowBox[{
               "xy", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["1", "180"], " ", "\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"180", " ", 
                    RowBox[{
                    "xy", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], 
                   RowBox[{"6367", " ", "\[Pi]"}]], "+", 
                  RowBox[{
                  "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ")"}]}], "]"}], " ", 
              RowBox[{"Tan", "[", 
               RowBox[{
                FractionBox["1", "180"], " ", "\[Pi]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"180", " ", 
                    RowBox[{
                    "xy", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], 
                   RowBox[{"6367", " ", "\[Pi]"}]], "+", 
                  RowBox[{
                  "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ")"}]}], "]"}]}], 
             RowBox[{"258109832863", " ", "\[Pi]"}]]}]}], "}"}]}], ",", 
        RowBox[{
         TemplateBox[{
           Cell[
            TextData["RuntimeOptions"]], "paclet:ref/RuntimeOptions"},
          "RefLink",
          BaseStyle->{"InlineFormula"}], "->", "\"\<Speed\>\""}], ",", 
        RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
        RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g2r", "=", 
     RowBox[{"Quiet", "@", 
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Phi]\[Lambda]", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Phi]\[Lambda]0", ",", "_Real", ",", "1"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"Evaluate", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["6367", "180"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", 
                RowBox[{
                "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "180"], "]"}]}], "-", 
            FractionBox[
             RowBox[{"6367", " ", 
              SuperscriptBox["\[Pi]", "3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "-", 
                 RowBox[{
                 "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], ")"}], "3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox[
                RowBox[{"\[Pi]", " ", 
                 RowBox[{
                 "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "180"], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{
                  "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "180"], "]"}], "2"]}], 
             "34992000"]}], ",", 
           RowBox[{
            RowBox[{
             FractionBox["6367", "180"], " ", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], ")"}]}], "+", 
            FractionBox[
             RowBox[{"6367", " ", 
              SuperscriptBox["\[Pi]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "-", 
                 RowBox[{
                 "\[Phi]\[Lambda]0", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], ")"}], "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"0.03490658503988659`", " ", 
                RowBox[{
                "\[Phi]\[Lambda]", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "]"}]}], "129600"]}]}], "}"}]}],
         ",", 
        RowBox[{
         TemplateBox[{
           Cell[
            TextData["RuntimeOptions"]], "paclet:ref/RuntimeOptions"},
          "RefLink",
          BaseStyle->{"InlineFormula"}], "->", "\"\<Speed\>\""}], ",", 
        RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
        RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.820811731674284*^9, 3.820811960095992*^9}, {
   3.8208120055870647`*^9, 3.820812058060439*^9}, {3.820812096672111*^9, 
   3.820812110200639*^9}, {3.820812169059099*^9, 3.82081218168114*^9}, {
   3.8208122612561293`*^9, 3.82081233396093*^9}, {3.820812399840623*^9, 
   3.820812434787882*^9}, 3.8208443263967752`*^9, {3.8208443585713987`*^9, 
   3.820844361898673*^9}, 3.839671829815331*^9, {3.839671863891362*^9, 
   3.8396718980615883`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"97bec193-9865-46ce-95ac-7ab3a3e8c628"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Disk3D", "[", 
   RowBox[{"p_", ",", "r_", ",", 
    RowBox[{"t_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Cylinder", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"p", ",", "t"}], "]"}], ",", 
      RowBox[{"Append", "[", 
       RowBox[{"p", ",", 
        RowBox[{"t", "+", "0.0001"}]}], "]"}]}], "}"}], ",", "r"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gkDisk", "[", 
   RowBox[{"p_", ",", "t_", ",", "mag_", ",", 
    RowBox[{"id_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cylinder", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"p", ",", "t"}], "]"}], ",", 
        RowBox[{"Append", "[", 
         RowBox[{"p", ",", 
          RowBox[{"t", "+", 
           RowBox[{"gkt", "[", "mag", "]"}]}]}], "]"}]}], "}"}], ",", 
      RowBox[{"gkr", "[", "mag", "]"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"id", "\[NotEqual]", "0"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"id", ",", 
        RowBox[{"Append", "[", 
         RowBox[{"p", ",", 
          RowBox[{"t", "+", 
           RowBox[{".05", "*", 
            RowBox[{"gkt", "[", "mag", "]"}]}]}]}], "]"}]}], "]"}], ",", 
      "Nothing"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"il", "[", "y_", "]"}], ":=", 
   RowBox[{"InfiniteLine", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "y"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "y"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7354449948742585`*^9, 3.735445032440015*^9}, {
   3.7354498511574235`*^9, 3.7354498976654234`*^9}, {3.735453169808736*^9, 
   3.735453185521307*^9}, {3.735464511844826*^9, 3.7354645178774295`*^9}, {
   3.7354651040150375`*^9, 3.7354651615197873`*^9}, {3.73546528805544*^9, 
   3.7354653110787416`*^9}, {3.735465692238657*^9, 3.735465709041204*^9}, {
   3.735465742308569*^9, 3.735465806397257*^9}, {3.735466057408947*^9, 
   3.7354660656004887`*^9}, {3.735467293053999*^9, 3.735467298542548*^9}, 
   3.735470046055272*^9, 3.7354709452751846`*^9, 3.7354712934660006`*^9, {
   3.7354718398886375`*^9, 3.7354718639530435`*^9}, {3.735471942773925*^9, 
   3.7354719895266*^9}, {3.73547275280892*^9, 3.735472796300269*^9}, {
   3.735472908094447*^9, 3.735472933183956*^9}, {3.73556366292537*^9, 
   3.735563686430721*^9}, {3.7355637186079383`*^9, 3.7355637210241795`*^9}, {
   3.7355637740664835`*^9, 3.7355638606141376`*^9}, {3.8203179935362787`*^9, 
   3.820318060186697*^9}, {3.8205821900428553`*^9, 3.8205822058202*^9}, {
   3.8206082475201178`*^9, 3.820608248877211*^9}, {3.820609574075046*^9, 
   3.820609583892111*^9}, {3.8206097097746897`*^9, 3.820609710175975*^9}, {
   3.820610412401801*^9, 3.820610414732998*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3dc942fb-fd55-4cbc-9f89-9bc8514c3e69"],

Cell["\<\
this cell defines a function to generate a sequence of n elements from min to \
max whose interdistance is variable. When shrink is 0 points are equidistant, \
while positive value concentrate points at the min value (interdistance \
increasing) and negative do the opposite. Useful for the calculation of some \
histogarams with different size bins ()\
\>", "Text",
 CellChangeTimes->{{3.8403514295854816`*^9, 3.8403514488251143`*^9}, {
  3.840352175394376*^9, 3.840352416295095*^9}, {3.840361256412306*^9, 
  3.840361437185755*^9}},ExpressionUUID->"0efbab32-beb2-40de-9109-\
7ef99f959725"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "expseq", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expseq", "[", 
   RowBox[{"min_", ",", "max_", ",", "n_", ",", "shrink_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"min", ",", "max", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"max", "-", "min"}], ")"}], "/", "n"}]}], "]"}], ",", 
         RowBox[{"shrink", "==", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"Exp", "[", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "shrink", ",", 
              RowBox[{"shrink", "/", "n"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"N", "@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"r", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"Exp", "[", "shrink", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"min", ",", "max"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{"shrink", "!=", "0"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.840174249990333*^9, 3.840174395427822*^9}, {
   3.8401745787563457`*^9, 3.840174606354577*^9}, 3.840174666955875*^9, {
   3.840175256600779*^9, 3.840175265247645*^9}, {3.8403515244942503`*^9, 
   3.840351564553774*^9}, {3.840351664750801*^9, 3.840351764478586*^9}, {
   3.840351802313631*^9, 3.840351835724818*^9}, {3.8403525075128603`*^9, 
   3.840352556596518*^9}, {3.8403525907680264`*^9, 3.840352635481289*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2d1dbb5d-0816-40f9-840f-9c99ab629ba3"],

Cell[CellGroupData[{

Cell["Catalogue Info plots", "Subsection",
 CellChangeTimes->{{3.840352473631403*^9, 3.8403524757191343`*^9}, 
   3.8414002452915497`*^9, {3.84295042537237*^9, 3.842950467413351*^9}, {
   3.8429512539964657`*^9, 3.842951271583068*^9}, {3.842951393628636*^9, 
   3.842951400311878*^9}, {3.8429516217772923`*^9, 3.8429517382677593`*^9}, {
   3.8463115119075603`*^9, 3.846311573479474*^9}, {3.87716679608461*^9, 
   3.877166828092951*^9}},ExpressionUUID->"0aea74f1-3b4d-4806-9847-\
c43ccfcc2d13"],

Cell["this cell extracts some useful information from catalog ", "Text",
 CellChangeTimes->{{3.8397714351785803`*^9, 3.839771464222197*^9}, {
   3.840530209875791*^9, 3.8405302115629997`*^9}, 
   3.841400265231694*^9},ExpressionUUID->"2ffbe1a3-c67c-4e10-aacf-\
abcd7ca8914f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"infodata", "[", 
   RowBox[{"indata_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"info", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<mag\>\"", ",", "\"\<times\>\""}], "}"}]}], "]"}]}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "f", ",", "mags", ",", "itb", ",", "itf", ",", "tdiffs", ",", 
      "loghistbins", ",", "u", ",", "expfit", ",", "qplott", ",", "qplotm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mags", "=", 
      RowBox[{"indata", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "file", "]"}], "===", "String"}], ",", "file", 
        ",", "dfile"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "info", "]"}], ",", "\"\<times\>\""}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"interevents", " ", "times", " ", "range"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tdiffs", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"indata", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "//", 
            "Differences"}], ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "<=", "0"}], "&"}], ")"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"itb", ",", "itf"}], "}"}], "=", 
         RowBox[{
          RowBox[{"Log10", "[", 
           RowBox[{"MinMax", "[", "tdiffs", "]"}], "]"}], "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"min_", ",", "max_"}], "}"}], ":>", 
           RowBox[{"10", "^", 
            RowBox[{"Round", "[", 
             RowBox[{"{", 
              RowBox[{"min", ",", "max"}], "}"}], "]"}]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "extracts", " ", "variable", " ", "width", " ", "bins", " ", 
          "content", " ", "from", " ", "interevent", " ", "times", " ", 
          RowBox[{"distribution", ":", " ", 
           RowBox[{"Log", " ", "are"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"loghistbins", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Mean", "/@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"xpts", "=", 
                  RowBox[{"expseq", "[", 
                   RowBox[{"itb", ",", "itf", ",", "100", ",", "12"}], 
                   "]"}]}], ",", "2", ",", "1"}], "]"}]}], ",", 
              RowBox[{"Log10", "/@", 
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"BinCounts", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"indata", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "//",
                     "Differences"}], ",", 
                   RowBox[{"{", "xpts", "}"}]}], "]"}], 
                 RowBox[{
                  RowBox[{"Differences", "@", "xpts"}], " ", "*", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Length", "[", "indata", "]"}], "-", "1"}], 
                   ")"}]}]], ")"}]}]}], "}"}], "\[Transpose]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"_", "?", "NumberQ"}], ",", 
             RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"expfit", "=", 
         RowBox[{"FindDistributionParameters", "[", 
          RowBox[{"tdiffs", ",", 
           RowBox[{"ExponentialDistribution", "[", "u", "]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"grd", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Sort", "@", 
         RowBox[{"Tally", "[", "mags", "]"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m_", ",", "n_"}], "}"}], "\[RuleDelayed]", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"Reverse", "@", 
            RowBox[{"Accumulate", "@", 
             RowBox[{"Reverse", "@", "n"}]}]}]}], "}"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Fit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{"grd", ",", 
           RowBox[{"{", 
            RowBox[{"_", ",", "0"}], "}"}]}], "]"}], "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"m_", ",", "n_"}], "}"}], "\[RuleDelayed]", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"Log", "[", "n", "]"}]}], "}"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plots", "=", 
      RowBox[{"PadRight", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "info", "]"}], ",", "\"\<mag\>\""}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Legended", "[", 
                 RowBox[{
                  RowBox[{"Tally", "[", "mags", "]"}], ",", 
                  RowBox[{"Placed", "[", 
                   RowBox[{"\"\<Events number\>\"", ",", "Above"}], "]"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Legended", "[", 
                 RowBox[{"grd", ",", 
                  RowBox[{"Placed", "[", 
                   RowBox[{"\"\<Cumulative number\>\"", ",", "Above"}], 
                   "]"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"Filling", "\[Rule]", "0"}], ",", 
              RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"False", ",", "True"}], "}"}]}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "320"}], ",", " ", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"StringForm", "[", 
                RowBox[{"\"\<b-value: ``\>\"", ",", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "/", 
                  RowBox[{"Log", "[", "10", "]"}]}]}], "]"}]}], ",", " ", 
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Dotted", ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"(", 
                    RowBox[{"res", "/.", 
                    RowBox[{"x", "\[Rule]", "#"}]}], ")"}]}], "}"}], "&"}], "/@", 
                   RowBox[{"MinMax", "[", "mags", "]"}]}], "]"}]}], "}"}]}]}],
              "]"}], "\[IndentingNewLine]", ",", "Nothing"}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"plott", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "info", "]"}], ",", 
               "\"\<times\>\""}], "]"}], ",", 
             RowBox[{"ListLogLinearPlot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"loghistbins", "/.", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x_", ",", "y_"}], "}"}], ":>", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"y", "-", 
                    RowBox[{"Log10", "@", 
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"ExponentialDistribution", "[", 
                    RowBox[{"u", "/.", "expfit"}], "]"}], ",", "x"}], 
                    "]"}]}]}]}], "}"}]}]}], ",", " ", 
               RowBox[{"Joined", "\[Rule]", "False"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "320"}], "\[IndentingNewLine]",
                ",", 
               RowBox[{
               "PlotLabel", "->", 
                "\"\<\!\(\*SubscriptBox[\(log\), \(10\)]\) distance \
of\\ninterevent times bin counts\\n from exponential distr\>\""}], ",", 
               RowBox[{"PlotRange", "->", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"itb", ",", "itf"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Frame", "->", "True"}], ",", 
               RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], 
             "\[IndentingNewLine]", ",", "Nothing"}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}], ",", "2", ",", "SpanFromLeft"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"general", " ", "file", " ", "info"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`` (``)\>\"", ",", 
             RowBox[{"FileBaseName", "[", "f", "]"}], ",", 
             RowBox[{"Which", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Or", "[", 
                RowBox[{
                 RowBox[{"catalogue", "\[Equal]", "0"}], ",", 
                 RowBox[{
                  RowBox[{"Head", "[", "catalogue", "]"}], "==", "Symbol"}]}],
                 "]"}], ",", 
               RowBox[{"DateString", "[", 
                RowBox[{"FileDate", "[", "dfile", "]"}], "]"}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "dfile", " ", "is", " ", "the", " ", "actual", " ", "opened", 
                 " ", "file", " ", 
                 RowBox[{"(", 
                  RowBox[{"zip", " ", "or", " ", "not"}], ")"}], " ", "and", 
                 " ", "has", " ", "a", " ", "date", " ", "attached"}], " ", 
                "*)"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"catalogue", ">", "0"}], ",", 
               RowBox[{"\"\<Randomized \[Rule] \>\"", "<>", 
                RowBox[{
                "nts", "\[LeftDoubleBracket]", "catalogue", 
                 "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ",", 
           "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<containing `` events spanning on `` years\\nMagnitudo range: \
`` (discretization granularity:  ``)\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{"Length", "[", "indata", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ceiling", "@", 
               RowBox[{"Max", "@", 
                RowBox[{"indata", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
              "-", 
              RowBox[{"Floor", "@", 
               RowBox[{"Min", "@", 
                RowBox[{"indata", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"MinMax", "[", "mags", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Union", "[", "mags", "]"}], "//", "Differences"}], "//", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{"#", ",", ".000001"}], "]"}], "&"}]}], "//", 
              "Min"}]}], "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"plots", "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"SpanFromLeft", ",", "SpanFromLeft"}], "}"}], "->", 
           "Nothing"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8463089981722307`*^9, 3.846309011009199*^9}, {
   3.846309041814237*^9, 3.846309199076396*^9}, {3.8463092395984993`*^9, 
   3.846309280682695*^9}, {3.8463093120259867`*^9, 3.8463093329295473`*^9}, {
   3.846309375949031*^9, 3.8463094746876574`*^9}, {3.846309679309947*^9, 
   3.8463097174163218`*^9}, {3.846309748763363*^9, 3.846309830562068*^9}, {
   3.8463098667935743`*^9, 3.8463099981039352`*^9}, {3.846310029940928*^9, 
   3.84631003995763*^9}, {3.8463101221429234`*^9, 3.846310169190811*^9}, {
   3.846310200617731*^9, 3.8463103702365913`*^9}, {3.846310414912732*^9, 
   3.8463104557834873`*^9}, {3.8463104925553713`*^9, 
   3.8463105281693573`*^9}, {3.846310596020825*^9, 3.846310599204795*^9}, {
   3.8463106537329073`*^9, 3.846310654857135*^9}, 3.846310777161785*^9, {
   3.846310817811569*^9, 3.846310818489143*^9}, {3.846311239065381*^9, 
   3.8463114641496162`*^9}, 3.875597785584447*^9, {3.8755979524717817`*^9, 
   3.875598067713263*^9}, {3.8948617601105003`*^9, 3.894861771074215*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f6aa0e7b-7a1f-440d-a2a0-648ee2ebed31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["temp cell (debug purposes)", "Section",
 CellChangeTimes->{{3.8396736868118057`*^9, 3.83967369297272*^9}, {
  3.8414002956148767`*^9, 3.841400299245962*^9}, {3.894860036729514*^9, 
  3.8948600707934923`*^9}},ExpressionUUID->"b85a94c2-4ed1-4ae5-b912-\
1d425e894d28"],

Cell[CellGroupData[{

Cell["test file loading ", "Subsection",
 CellChangeTimes->{{3.840707754750865*^9, 3.840707770470132*^9}, {
  3.875771205721036*^9, 
  3.875771213469562*^9}},ExpressionUUID->"394754c4-d1b9-4b86-b464-\
8552fc129f62"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\</Users/robertocarluccio/ownCloud/work/rodolfo/poster2021/selezione \
cpti/CPTI15_5km_1650_M50_symfmt.txt\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.839672039525285*^9, 3.839672068749795*^9}, 
   3.839672530233789*^9, {3.8396745167198753`*^9, 3.839674535210505*^9}, 
   3.839674600738481*^9, {3.839674643557843*^9, 3.8396746500056267`*^9}, 
   3.839676351419527*^9, 3.8396945514640083`*^9, {3.839694677336936*^9, 
   3.839694697373349*^9}, 3.840172182279139*^9, 3.840529124155221*^9, 
   3.8405301335945177`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"8352a4da-6c00-4d12-b145-28b93997cc22"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\</Volumes/GoogleDrive/Il mio Drive/Colab \
Notebooks/multiplette/dati/itcs_app_sett_M40_03_10_10_geo.txt\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.839672039525285*^9, 3.839672068749795*^9}, 
   3.839672530233789*^9, {3.8396745167198753`*^9, 3.839674535210505*^9}, 
   3.839674600738481*^9, {3.839674643557843*^9, 3.8396746500056267`*^9}, 
   3.839676351419527*^9, 3.8396945514640083`*^9, {3.839694677336936*^9, 
   3.839694697373349*^9}, 3.840172182279139*^9, 3.840529124155221*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"3cd6966a-18e9-4238-8d28-3277bc6ebe54"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FileBaseName", "[", "file", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"raw", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"file", ",", "\"\<table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "raw", "]"}], "\n", 
 RowBox[{
  RowBox[{"Length", "[", "raw", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"offs", "=", 
    RowBox[{"Mean", "[", 
     RowBox[{"raw", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"raw", " ", "\[LongRightArrow]", " ", "orig"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orig", "=", 
   RowBox[{"raw", "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t1_", "?", "NumberQ"}], ",", "lat_", ",", "lon_", ",", "dep_",
        ",", "mag1_", ",", "_"}], "}"}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{"t1", ",", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"g2r", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lat", ",", "lon"}], "}"}], ",", "offs"}], "]"}], ",", 
         "dep"}], "]"}], ",", "mag1", ",", 
       RowBox[{"i", "++"}]}], "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Short", "[", "orig", "]"}], 
  "\n"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.839672039525285*^9, 3.839672068749795*^9}, 
   3.839672530233789*^9, {3.8396745167198753`*^9, 3.839674535210505*^9}, 
   3.839674600738481*^9, {3.839674643557843*^9, 3.8396746500056267`*^9}, 
   3.839676351419527*^9, 3.8396945514640083`*^9, {3.839694677336936*^9, 
   3.839694697373349*^9}, 3.840172182279139*^9, 3.840529124155221*^9, {
   3.840530159525964*^9, 3.840530178331346*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"802ffbfd-7999-4f14-903d-cb185cee7a46"],

Cell[BoxData["\<\"itcs_app_sett_M40_03_10_10_geo\"\>"], "Output",
 CellChangeTimes->{
  3.84017219372433*^9, 3.840342782311371*^9, 3.8405157032931547`*^9, 
   3.840530141734515*^9, 3.84053017977487*^9, {3.840535530275943*^9, 
   3.840535550952256*^9}, 3.8405360006449213`*^9, 3.840704076040798*^9, 
   3.840860583761064*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"121c9a80-9d76-400c-aafa-200df61759bb"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.20097`", ",", "43.7374`", ",", "12.4824`", ",", "4.81`", ",", "4.24`",
       ",", "170"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.20799`", ",", "43.9473`", ",", "12.5146`", ",", "9.75`", ",", "4.24`",
       ",", "63"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "225926", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "100000.1649`", ",", "44.5036`", ",", "12.2703`", ",", "2.25`", ",", 
      "4.51`", ",", "27"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.84017219372433*^9, 3.840342782311371*^9, 3.8405157032931547`*^9, 
   3.840530141734515*^9, 3.84053017977487*^9, {3.840535530275943*^9, 
   3.840535550952256*^9}, 3.8405360006449213`*^9, 3.840704076040798*^9, 
   3.840860587692071*^9},
 CellLabel->
  "Out[17]//Short=",ExpressionUUID->"da11e46c-991c-4c61-be19-49091f4a9d1f"],

Cell[BoxData["225929"], "Output",
 CellChangeTimes->{
  3.84017219372433*^9, 3.840342782311371*^9, 3.8405157032931547`*^9, 
   3.840530141734515*^9, 3.84053017977487*^9, {3.840535530275943*^9, 
   3.840535550952256*^9}, 3.8405360006449213`*^9, 3.840704076040798*^9, 
   3.8408605876935368`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"80dd75f4-0701-4de2-b3a7-b6e12c236e70"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.20097`", ",", 
      RowBox[{"{", 
       RowBox[{
       "18.48086077667136`", ",", "6.130885935110931`", ",", "4.81`"}], "}"}],
       ",", "4.24`", ",", "1"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "225927", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"100000.1649`", ",", 
      RowBox[{"{", 
       RowBox[{
       "1.4327427657805865`", ",", "91.24944175502274`", ",", "2.25`"}], 
       "}"}], ",", "4.51`", ",", "225929"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.84017219372433*^9, 3.840342782311371*^9, 3.8405157032931547`*^9, 
   3.840530141734515*^9, 3.84053017977487*^9, {3.840535530275943*^9, 
   3.840535550952256*^9}, 3.8405360006449213`*^9, 3.840704076040798*^9, 
   3.8408605902183113`*^9},
 CellLabel->
  "Out[22]//Short=",ExpressionUUID->"72765a55-70dd-4d4c-b698-4bd6419f3350"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Main Program", "Section",
 CellChangeTimes->{{3.8405291511744347`*^9, 
  3.840529160541095*^9}},ExpressionUUID->"2fd14590-5081-42e9-96a3-\
df3f81ede526"],

Cell["\<\
The program is divided (for convenience) in  3 separated cells :
1) File loader for catalog import, preparation 
2) catalog  info extraction
3) Interactive panel, from which parameters are entered, search started and \
results analysed\
\>", "Text",
 CellChangeTimes->{{3.8397686133249903`*^9, 3.839768760298196*^9}, {
  3.8397688584238853`*^9, 3.839768937485334*^9}, {3.839771208893053*^9, 
  3.839771275460402*^9}, {3.8405297833118877`*^9, 
  3.84052978497893*^9}},ExpressionUUID->"8dbc9d81-b514-4f0f-af15-\
4497eafb8b98"],

Cell[CellGroupData[{

Cell["1) File Loader", "Subsection",
 CellChangeTimes->{{3.839694799122304*^9, 3.8396948117567387`*^9}, {
  3.839782336197644*^9, 
  3.839782338006997*^9}},ExpressionUUID->"dd2921a5-d352-40bf-951e-\
6501c73d7cf6"],

Cell[TextData[{
 "This cell imports the catalog, a plain ascii text table whose rows are \
expected to be:\n ",
 Cell[BoxData[GridBox[{
    {
     RowBox[{"time", 
      RowBox[{"(", "y", ")"}]}], 
     RowBox[{"geo", " ", "lat"}], 
     RowBox[{"geo", " ", "lon"}], 
     RowBox[{"depth", 
      RowBox[{"(", "km", ")"}]}], "mag", 
     RowBox[{"cell", "#"}]}
   },
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}}]],
  ExpressionUUID->"ab95ab8d-1a56-4204-8343-1451fca42367"],
 "\nIf the general format is correct, data events contained in list ",
 StyleBox["raw",
  FontWeight->"Bold"],
 " are transformed in the  list ",
 StyleBox["orig.",
  FontWeight->"Bold"],
 "\nIn list ",
 StyleBox["raw",
  FontWeight->"Bold"],
 " the events are expressed in geographic (lat,lon) spherical coordinates\n\
while in list ",
 StyleBox["orig",
  FontWeight->"Bold"],
 " they are referred in a generic cartesian  {x,y,z} framework relative to a \
local central point\n",
 Cell[BoxData[GridBox[{
    {
     RowBox[{"time", 
      RowBox[{"(", "y", ")"}]}], 
     RowBox[{"relative", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "mag", 
     RowBox[{"line", "#"}]}
   },
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}}]],
  ExpressionUUID->"2f3f1f38-7ab4-4eec-b690-964cfbbee89d"],
 "\nif the file is a zipped archive of one or more catalogues the code issues \
a requester to choose the one to decode and process"
}], "Text",
 CellChangeTimes->{{3.839771279098834*^9, 3.839771413677101*^9}, {
  3.840529203323474*^9, 3.8405294150125847`*^9}, {3.8405295091305017`*^9, 
  3.8405297762041388`*^9}, {3.875535182872239*^9, 3.8755351855282297`*^9}, {
  3.894862377945095*^9, 
  3.894862443350559*^9}},ExpressionUUID->"20a687b4-8cb9-41d0-860d-\
df0bb446769d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"catalog", " ", "import"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dfile", "=", 
     RowBox[{"SystemDialogInput", "[", 
      RowBox[{"\"\<FileOpen\>\"", ",", 
       RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileExtension", "[", "dfile", "]"}], "==", "\"\<zip\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"archive", "=", 
        RowBox[{"Import", "[", "dfile", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"file", "=", 
        RowBox[{"DialogInput", "[", 
         RowBox[{"{", 
          RowBox[{"(*", " ", 
           RowBox[{
           "select", " ", "file", " ", "in", " ", "zip", " ", "archive"}], 
           " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "TextCell", "[", "\"\<Choose a file from archive: \>\"", "]"}], 
           ",", 
           RowBox[{"SetterBar", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "fr", "]"}], ",", "archive", ",", 
             RowBox[{"Appearance", "->", "\"\<Vertical\>\""}]}], "]"}], ",", 
           RowBox[{"DefaultButton", "[", 
            RowBox[{"DialogReturn", "[", "fr", "]"}], "]"}]}], "}"}], "]"}]}],
        ";", 
       RowBox[{"raw", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"dfile", ",", 
          RowBox[{"{", 
           RowBox[{"file", ",", "\"\<table\>\""}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", " ", 
      RowBox[{"raw", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"dfile", ",", "\"\<table\>\""}], "]"}]}]}], "]"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"ascii", " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MatchQ", "[", 
        RowBox[{
         RowBox[{"Tally", "[", 
          RowBox[{"Length", "/@", "raw"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"6", ",", "_Integer"}], "}"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<malformed catalog file !!!\>\"", "]"}], ";", 
       RowBox[{"Interrupt", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"raw", " ", "\[LongRightArrow]", " ", "orig"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"offs", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"raw", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"orig", "=", 
        RowBox[{"raw", "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"t1_", "?", "NumberQ"}], ",", "lat_", ",", "lon_", ",", 
            "dep_", ",", "mag1_", ",", "_"}], "}"}], "\[RuleDelayed]", 
          RowBox[{"{", 
           RowBox[{"t1", ",", 
            RowBox[{"Append", "[", 
             RowBox[{"(*", "caloi", "*)"}], 
             RowBox[{
              RowBox[{"g2r", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"lat", ",", "lon"}], "}"}], ",", "offs"}], "]"}], 
              ",", "dep"}], "]"}], ",", "mag1", ",", 
            RowBox[{"i", "++"}]}], "}"}]}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Short", "[", "orig", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.83969466977108*^9, 3.839694670290978*^9}, {
   3.839694726478065*^9, 3.83969475469457*^9}, {3.839694950323979*^9, 
   3.839695000031797*^9}, 3.8396968360687647`*^9, {3.839697042149746*^9, 
   3.839697060661435*^9}, {3.83969751649699*^9, 3.8396975476624527`*^9}, {
   3.8396975968685293`*^9, 3.839697620068404*^9}, {3.839697677172276*^9, 
   3.839697735863867*^9}, 3.8396979567794724`*^9, {3.839698180567061*^9, 
   3.839698186558441*^9}, {3.83976100605927*^9, 3.839761068868993*^9}, {
   3.839761245416794*^9, 3.8397612565185757`*^9}, {3.839766243403491*^9, 
   3.839766252949724*^9}, {3.839768215576836*^9, 3.839768216596037*^9}, {
   3.839768387643055*^9, 3.839768393859398*^9}, {3.839768789399537*^9, 
   3.839768825816584*^9}, {3.839768960323925*^9, 3.839768967676515*^9}, {
   3.839769014564748*^9, 3.839769025937204*^9}, {3.839769097181294*^9, 
   3.839769141975724*^9}, {3.839769253000575*^9, 3.839769281235423*^9}, {
   3.839769656983532*^9, 3.839769657634809*^9}, {3.8397697299899406`*^9, 
   3.839769779577787*^9}, {3.839770041448097*^9, 3.839770043955515*^9}, 
   3.8397708963116903`*^9, {3.839913753562642*^9, 3.8399137647851343`*^9}, 
   3.8399139852288303`*^9, 3.841383250175766*^9, {3.84140044081462*^9, 
   3.841400472165904*^9}, 3.84140051040598*^9, {3.846311673727528*^9, 
   3.8463116891431637`*^9}, {3.862403473163612*^9, 3.8624035037713013`*^9}, {
   3.862403542243149*^9, 3.862403548762856*^9}, {3.8757716203316097`*^9, 
   3.875771629985591*^9}, 3.875771720164753*^9, {3.894862712443747*^9, 
   3.894862729754209*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"7df17c96-2d92-4c4a-a388-14eda996d67a"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.18344`", ",", 
      RowBox[{"{", 
       RowBox[{"160.3042473664279`", ",", 
        RowBox[{"-", "83.68068472750207`"}], ",", "19.49`"}], "}"}], ",", 
      "4.14`", ",", "1"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "337252", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"99999.89479`", ",", 
      RowBox[{"{", 
       RowBox[{
       "66.66757444521426`", ",", "23.345312130812474`", ",", "6.08`"}], 
       "}"}], ",", "3.99`", ",", "337254"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.875596775003784*^9, 3.875608113344404*^9, 
  3.875613665327631*^9, 3.875614057636407*^9, 3.87561413285851*^9, 
  3.875614581029641*^9, 3.875614620569248*^9, 3.875614657727763*^9, 
  3.875771273994732*^9, 3.8948623694044*^9, 3.894862752659054*^9, 
  3.894864061759411*^9},
 CellLabel->
  "Out[15]//Short=",ExpressionUUID->"84c3a378-78fe-4158-898e-8c24be9d9f20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "cell", " ", "is", " ", "just", " ", "to", " ", "show", " ", 
    "how", " ", "input", " ", "catalog", " ", "table", " ", "is", " ", 
    "converted", " ", "in", " ", "cartesian", " ", "coordinates", " ", "and", 
    " ", "an", " ", "internal", " ", "index", " ", "is", " ", "issued"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<Time span catalog: from `` to `` years\>\"", ",", 
     RowBox[{
      RowBox[{"cattspan", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"orig", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"orig", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}]}], ";", " ", 
      RowBox[{"cattspan", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"cattspan", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"raw", "\[LeftDoubleBracket]", 
           RowBox[{";;", "3"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"List", "@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"\[VerticalEllipsis]", ",", 
             RowBox[{"Length", "@", 
              RowBox[{"raw", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ",", 
          RowBox[{"raw", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"-", "3"}], ";;"}], "\[RightDoubleBracket]"}]}], "]"}], 
        ",", 
        RowBox[{"ItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"5", ",", " ", "4"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "30", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"orig", "\[LeftDoubleBracket]", 
              RowBox[{";;", "3"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"\[VerticalEllipsis]", ",", 
                 RowBox[{"Length", "@", 
                  RowBox[{"orig", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "}"}], "}"}], 
             ",", 
             RowBox[{"orig", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "3"}], ";;"}], "\[RightDoubleBracket]"}]}], "]"}],
            "/.", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t_", "?", "NumberQ"}], ",", "p_List", ",", 
              RowBox[{"m_", "?", "NumberQ"}], ",", "id_Integer"}], "}"}], 
            "\[RuleDelayed]", 
            RowBox[{"Sequence", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "1"}], ",", "t", ",", 
                   "SpanFromAbove"}], "]"}], ",", 
                 RowBox[{
                 "p", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "1"}], ",", "m", ",", 
                   "SpanFromAbove"}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"i", "\[Equal]", "1"}], ",", "id", ",", 
                   "SpanFromAbove"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}]}]}], 
          "\[IndentingNewLine]", ",", "1"}], "]"}], ",", 
        RowBox[{"ItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1.1"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}], ",", 
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.89486499405118*^9, 3.894865020330999*^9}, {
  3.8948651572350893`*^9, 3.894865227355227*^9}, {3.894865334962179*^9, 
  3.89486534423304*^9}, {3.8948653759468117`*^9, 3.894865381110183*^9}, {
  3.894865428889762*^9, 3.894865485094837*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"e80b639e-162b-4d91-a0c5-e550afa3de5e"],

Cell[BoxData[
 InterpretationBox["\<\"Time span catalog: from \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) to \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) years\
\"\>",
  StringForm["Time span catalog: from `` to `` years", 0, 100000],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.894865007992601*^9, {3.894865192365592*^9, 3.89486523160115*^9}, 
   3.894865344950001*^9, 3.894865382444283*^9, {3.894865432979188*^9, 
   3.8948654861580143`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"5128ddbd-ae43-4b08-b850-ff8d9518a94b"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    GridBox[{{"0.18344`", "42.1269`", "15.1205`", "19.49`", "4.14`", "54"}, {
      "0.34726`", "44.0661`", "11.3173`", "7.65`", "4.26`", "2"}, {
      "0.46563`", "44.0047`", "13.2736`", "2.61`", "4.14`", "40"}, {
      "\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
       "\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]"}, {
      "99997.7373`", "42.0081`", "13.8791`", "13.28`", "3.99`", "14"}, {
      "99998.28738`", "41.8228`", "13.9284`", "13.2`", "4.26`", "9"}, {
      "99999.89479`", "43.1035`", "13.997`", "6.08`", "3.99`", "48"}}, 
     AutoDelete -> False, 
     GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
     GridBoxItemSize -> {"Columns" -> {{5}}, "Rows" -> {{4}}}], "Grid"], 
   TemplateBox[{30}, "Spacer1"], 
   TagBox[
    GridBox[{{"0.18344`", "160.3042473664279`", "4.14`", "1"}, {
      "\[SpanFromAbove]", 
       RowBox[{"-", "83.68068472750207`"}], "\[SpanFromAbove]", 
       "\[SpanFromAbove]"}, {
      "\[SpanFromAbove]", "19.49`", "\[SpanFromAbove]", "\[SpanFromAbove]"}, {
      "0.34726`", 
       RowBox[{"-", "148.34404624875583`"}], "4.26`", "2"}, {
      "\[SpanFromAbove]", "131.6606508043747`", "\[SpanFromAbove]", 
       "\[SpanFromAbove]"}, {
      "\[SpanFromAbove]", "7.65`", "\[SpanFromAbove]", "\[SpanFromAbove]"}, {
      "0.46563`", "7.85738740382089`", "4.14`", "3"}, {
      "\[SpanFromAbove]", "123.16927890359506`", "\[SpanFromAbove]", 
       "\[SpanFromAbove]"}, {
      "\[SpanFromAbove]", "2.61`", "\[SpanFromAbove]", "\[SpanFromAbove]"}, {
      "\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[VerticalEllipsis]", 
       "\[VerticalEllipsis]"}, {
      "99997.7373`", "58.1134356191131`", "3.99`", "337252"}, {
      "\[SpanFromAbove]", 
       RowBox[{"-", "98.4689368660141`"}], "\[SpanFromAbove]", 
       "\[SpanFromAbove]"}, {
      "\[SpanFromAbove]", "13.28`", "\[SpanFromAbove]", "\[SpanFromAbove]"}, {
      "99998.28738`", "62.3648764045523`", "4.26`", "337253"}, {
      "\[SpanFromAbove]", 
       RowBox[{"-", "119.0259749474352`"}], "\[SpanFromAbove]", 
       "\[SpanFromAbove]"}, {
      "\[SpanFromAbove]", "13.2`", "\[SpanFromAbove]", "\[SpanFromAbove]"}, {
      "99999.89479`", "66.66757444521426`", "3.99`", "337254"}, {
      "\[SpanFromAbove]", "23.345312130812474`", "\[SpanFromAbove]", 
       "\[SpanFromAbove]"}, {
      "\[SpanFromAbove]", "6.08`", "\[SpanFromAbove]", "\[SpanFromAbove]"}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
     GridBoxItemSize -> {"Columns" -> {{5}}, "Rows" -> {{1.1}}}], "Grid"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.894865007992601*^9, {3.894865192365592*^9, 3.89486523160115*^9}, 
   3.894865344950001*^9, 3.894865382444283*^9, {3.894865432979188*^9, 
   3.89486548618359*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"684cd0e2-3798-4877-8a6d-739788fa73b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2) catalog info extraction", "Subsection",
 CellChangeTimes->{{3.83969466977108*^9, 3.839694670290978*^9}, {
   3.839694726478065*^9, 3.83969475469457*^9}, {3.839694950323979*^9, 
   3.839695000031797*^9}, 3.8396968360687647`*^9, {3.839697042149746*^9, 
   3.839697060661435*^9}, {3.83969751649699*^9, 3.8396975476624527`*^9}, {
   3.8396975968685293`*^9, 3.839697620068404*^9}, {3.839697677172276*^9, 
   3.839697735863867*^9}, 3.8396979567794724`*^9, {3.839698180567061*^9, 
   3.839698186558441*^9}, {3.83976100605927*^9, 3.839761068868993*^9}, {
   3.839761245416794*^9, 3.8397612565185757`*^9}, {3.839766243403491*^9, 
   3.839766252949724*^9}, {3.839768215576836*^9, 3.839768216596037*^9}, {
   3.839768387643055*^9, 3.839768393859398*^9}, {3.839768789399537*^9, 
   3.839768825816584*^9}, {3.839768960323925*^9, 3.839768967676515*^9}, {
   3.839769014564748*^9, 3.839769025937204*^9}, {3.839769097181294*^9, 
   3.839769141975724*^9}, {3.839769253000575*^9, 3.839769281235423*^9}, {
   3.839769656983532*^9, 3.839769657634809*^9}, {3.8397697299899406`*^9, 
   3.839769779577787*^9}, {3.839770041448097*^9, 3.839770043955515*^9}, 
   3.8397708963116903`*^9, {3.8397711885163507`*^9, 3.839771197706449*^9}, {
   3.839782342090171*^9, 
   3.8397823437988367`*^9}},ExpressionUUID->"3f2329e2-c500-4bdf-aa0e-\
388697c101b6"],

Cell["\<\
The infodata function can be called from the interacrive panel with the  \
button \[OpenCurlyDoubleQuote]show catalog global \
info\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.8948644587907963`*^9, 3.8948645548858757`*^9}, {
  3.8948646717579*^9, 
  3.8948646930094643`*^9}},ExpressionUUID->"ab2b8ccf-8d14-4648-af10-\
bd923665e986"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mags", "=", 
   RowBox[{"orig", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"infodata", "[", "orig", "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.83969466977108*^9, 3.839694670290978*^9}, {
   3.839694726478065*^9, 3.83969475469457*^9}, {3.839694950323979*^9, 
   3.839695000031797*^9}, 3.8396968360687647`*^9, {3.839697042149746*^9, 
   3.839697060661435*^9}, {3.83969751649699*^9, 3.8396975476624527`*^9}, {
   3.8396975968685293`*^9, 3.839697620068404*^9}, {3.839697677172276*^9, 
   3.839697735863867*^9}, 3.8396979567794724`*^9, {3.839698180567061*^9, 
   3.839698186558441*^9}, {3.83976100605927*^9, 3.839761068868993*^9}, {
   3.839761245416794*^9, 3.8397612565185757`*^9}, {3.839766243403491*^9, 
   3.839766252949724*^9}, {3.839768215576836*^9, 3.839768216596037*^9}, {
   3.839768387643055*^9, 3.839768393859398*^9}, {3.839768789399537*^9, 
   3.839768825816584*^9}, {3.839768960323925*^9, 3.839768967676515*^9}, {
   3.839769014564748*^9, 3.839769025937204*^9}, {3.839769097181294*^9, 
   3.839769141975724*^9}, {3.839769253000575*^9, 3.839769281235423*^9}, {
   3.839769656983532*^9, 3.839769657634809*^9}, {3.8397697299899406`*^9, 
   3.839769779577787*^9}, {3.839770041448097*^9, 3.839770043955515*^9}, 
   3.8397708963116903`*^9, 3.8397711885163507`*^9, {3.840172249808386*^9, 
   3.840172290999078*^9}, {3.840361450010396*^9, 3.8403614885412607`*^9}, {
   3.840361593211385*^9, 3.8403616626977663`*^9}, {3.840361766000002*^9, 
   3.8403618836595078`*^9}, {3.840361916021652*^9, 3.840362024407978*^9}, {
   3.8403620675334063`*^9, 3.840362149498901*^9}, {3.840362201676795*^9, 
   3.840362413948094*^9}, {3.840362460838985*^9, 3.840362603158454*^9}, {
   3.840362653022738*^9, 3.840362654345154*^9}, {3.8403631593879833`*^9, 
   3.84036317521216*^9}, {3.840363205462111*^9, 3.840363207327271*^9}, {
   3.840363264538988*^9, 3.840363321689106*^9}, {3.84051577324683*^9, 
   3.840515869498361*^9}, {3.8405319483771877`*^9, 3.840532016503757*^9}, {
   3.840534980295704*^9, 3.840534997377584*^9}, {3.841400202241448*^9, 
   3.8414002263677473`*^9}, {3.842950340566388*^9, 3.842950348822507*^9}, {
   3.842950477071697*^9, 3.842950485077322*^9}, {3.875597262408173*^9, 
   3.8755972668334217`*^9}, 3.875597796647892*^9, {3.8948646601318283`*^9, 
   3.8948646624481287`*^9}, {3.894864707323566*^9, 3.894864723512158*^9}, {
   3.894864872845314*^9, 3.894864918238386*^9}, {3.8948649655747347`*^9, 
   3.894864968261647*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b740fd49-2e43-483f-b1dd-95dc9c95132a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox["\<\"Simulated_100k_005-02-2_geo (Fri 28 Oct 2022 \
11:17:29)\"\>",
      StringForm[
      "`` (``)", "Simulated_100k_005-02-2_geo", "Fri 28 Oct 2022 11:17:29"],
      Editable->False], "\[SpanFromLeft]"},
    {
     InterpretationBox["\<\"containing \\!\\(\\*RowBox[{\\\"337254\\\"}]\\) \
events spanning on \\!\\(\\*RowBox[{\\\"100000\\\"}]\\) years\\nMagnitudo \
range: \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"3.99`\\\", \\\",\\\", \
\\\"7.27`\\\"}], \\\"}\\\"}]\\) (discretization granularity:  \
\\!\\(\\*RowBox[{\\\"0.01`\\\"}]\\))\"\>",
      StringForm[
      "containing `` events spanning on `` years\nMagnitudo range: `` \
(discretization granularity:  ``)", 337254, 100000, {3.99, 7.27}, 0.01],
      Editable->False], "\[SpanFromLeft]"},
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {}, 
           TagBox[{
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJw11nlYlPUWB3CEa6gsCsy8+yzvO8NqmmQIGMsX1Atd3FBw4WKhaUaoEGYq
6hW9IuCKYoRl6AXcQEXSEIUuiJoECW4omCgqN0Egk1hc8QKefs8zzzzzx3t+
53w/Z54ZeV70tAWmJiYmLb2vvvfW4EJtQstQVFYv6xq8zBnbyzqdwrcPQ8Hj
q82K6IwhN7NivIfY4MtEQ+PGB074pP/YwPm91tu7ipxwLOBenOqYDfLGsxdd
0p3wpp4Nrg6Pdb+ywgnO4X0VbXHcOcXVY7YT+j+G2+JW3KPyVk8nJLT0PWCL
Kw1vqRfxf9WzhdmZkGLvp47ov/6mLdIHtV3Q3HREl1NfBVuMaz+5jytwhKr/
ATtMzLZPbd/liNH9xw6agVFK6VJHTOtrJ9gO+sbOthnTHKl/O2ib452Nro50
vx2ahw54Z8kwR3yzu+/Y4dW2dRfy/nCgfuwQdubrlJ8uO+BcXzxldrhz9MJX
v+Y7UH92SA7o+fpVqgPNbwedamFQ4HIHmPQfFdpbn1Qr4Q7Urwo7duetWOXn
QPmo8ODmqMMejg7UvwrnA2/7lVs7ILDv+gAVRsfF3E7psqd5VDB5d1Y1e9ee
5lFhcTNiTpXb43PvPjEVVl7/6MiCE/ZY9eZCKN3W0U3f2ZOvCouk1utFyfY0
rwqfF//gEr7MHtl942Sp8LJCmTR8rj3Nr8KBR4t84yfb0/wq1H5UvWCblz0u
/dJ3VKgKdVz82sWe8lBBrjVdkMnbo7/9eypkN0akawfZUz4q1OQny1ufGslT
hdCpv51wbzZSXmpMChZy7tUZaf/U2Pn453LrSiPlp4b01f6gpGIjdP2AapSM
WR1RdNRIeaoxvWhi57G9RspTjaHrVo2YsNOI/ni81Qg9HbvFeaOR8lUjsnVz
btUKI+WrRoqV2S3rCCPtqxoOiU0Z8SFGyluNJ6etfE4EGinv3v64yJn+3kbK
W43fO3ObDzkZab/UiOuoPvxfjZHyV+Ot5oWOBXZGyr+33/kHl80wMVL+anzC
Hts+tMtA+avxZ3zZzKhWA/rbK1TD/05UUludgTzUyIvd4OZ+xUAeamx40jXd
76yBPNT47MV6V+G4gTzUMPHxHZt/0EAevfXOdXxsm24gDzWaoirPn0kxkAeD
kCcOkYPXGciDwVH+ok1prIE8GDycYRP9cL6BPBikx0W/HjXLQB4MNrHStvIg
A3kw2Dt2XMsPvgbyYODztsujOE8DeTD4PKVwtexkIA8GLVtVC2slA3kwCEox
WP5sayAPBi/DvHKODDKQB4Ozc65fie5RyIOBK3PR93KHQh4MHtSHDlrbqJAH
g6KSpIJPbynkwcBpwYbBHb8o5MEgLWPy7upzCnkwWPS96ZjHBQp5MLBIt7zV
eUwhDwZLwi4HBmQq5MHg9nv+vtlpCnkwOPX28lTtZoU8GNxYk1N4YYNCHgyO
dKgqGuIU8mDwaZzK2BCtkAeL0vZdu/bMVciDxdHRCdmlMxXyYHH5Wb2Vz2SF
PFgMjvcInj5BIQ8Wc9ZnRXmOVciDxbmmbAMzSiEPFhU/7ljDKgp5sNjkub58
EqeQB4vQd8zWbbVQyINFpWXEqLdfy+TBon5nuar8T5k8WPj4WlTXP5TJg8Xa
0rDOf9TL5MEi8vx4ueGaTB4scg6fC64ql8mjt16dic6kRCYPFrj004PhJ2Ty
YBHIlPn/cUgmDxYJz/IzozJk8mDxus5y+5hUmTxY+IaNXK9JlMmDhcep1W1f
rZHJg0XBlATzL2Nl8mDxUY2zRfKnMnmw8EouHp72oUweHI409Rw4GSKTBwdl
UeymrA9k8uCwZXhDQBhk8uCwf3rCFKsxMnlw4C8ldZ9ylsmDQ27eftMYnUwe
HPat7phtsJXJg8OUMyN+HGcukweHTN8Jzqkv9eTBgTW5WpPRricPDl8uLvL7
tVFPHhxcdY/f767VkweHvcLHE29X6cmDQ/7aocLD83ry4GD1aqXThDN68uCw
TRe0YuBxPXlwqG+6+OGObD15cGhJGhNzLE1PHhzWuT//7Faynjw4bG2O3Zf6
Lz15cHgY6h8z4As9eXDYc9NdU7tATx5c7z7UvJ4SpicPDs8H7N0vTNGTB4c6
ybxhrp+ePHiM9bpT/8hNTx48CtLWb9kzXE8ePG60uG/J1unJg8f6zbjtYacn
Dx4mL7xmXB6oJw8eRmvvn2d36ciDR49H9mXDHR158BATPEpmXtCRB4+7U+cf
2JarIw8ef+QFa8pTdeTBY2l71xZ5uY48eAxb7Tnt+BwdefCorm4aXBigIw8e
ena/bvEoHXnwOBkWlR3N6MiDx3uh6ffOv9CSBw+34vKuniYtefBIa9sZZV6l
JQ8eI97f/rdnhVry6J3PynJk3QEtefC9v2//G9m2U0sePJ6GLM74do2WPHh4
7XKrLJuvJQ8eIfKm+3YBWvLgUdp9+AU/SkseAlS/3rfZzWnJQ0CdpmVW9AsN
eQh4NWDp4/AbGvIQ0LF6cknH9xryEPBoVqljdYqGPAQYxqamJ63QkIeAhCxt
/NR5GvIQcKIi9+nODzTkIaBgZSagaMhDgK8xYolgqiEPAdUlP5VE3pXIQ0DG
pupvAosl8hBwqXZsbFCaRB4CXB6UnVsXJ5GHgJN1BXsSQyTyEBB0oz2Ld5PI
Q8CLxLV3j6gk8hBwpbCmo/apSB4Ckmf9GP5dlUgeAu4/yzYL3i2Sh4CYv49f
mfiJSB4CnlypEA6NEMlDgPmBbdMSXwnkISDp98jCa9cE8hAQEO6rT9ojkIeI
kT4T7hxaKJCHiIx9brMjXAXyEOFaZSy0esqTh4iS/KAtQyp48hBhoa75omQX
Tx4iGscnrf19Lk8eInpyNO7/5HnyEHHR7/iQ+73f+zceIs5WZnpFbOTIQ0T6
2QyzxBkceYiI8/qPT6iRIw8RB3Ov13a3suQhItK6dyMPsuQhYnH2PPONS1jy
EPEqVp60zIMlDxEeMJiinSEPEZaH3YOL9zLkIeIz9yXW8aEMeYhYmaKq+WAA
Qx4ixu9psD2drCYPEfMmOx/qsVSTh4isxoR543r/h7/xEKE9vbQgsdKOPESE
/3t0WG2TLXmIiLnxZ9lc2ZY8JHi9OzHROsKGPCQszX3f9/vMYeQhYeoil8pO
fhh5SMgTj5y6GjSUPCSM8B4ZUvKbFXlItF8W5CHh2xsWzw64WZCHhJQNZoV3
5wwhDwnlF7yXf3FmEHlI2PFg6Sr/bnPKV0Lc2udno3Leorwk6AIneTI5Aykf
CQeLbjIV0kDKR8KajGvFzD0zykcCE/pDUX6UKeXz13wmlIcEU73Lc4vcl75v
8uj9nm9t6/Yrfeb7Zn4NHns+7/Ef+Zvv/wERLBpd
              "]]}, 
            Annotation[#, {{Legended}, Charting`Private`Tag$25674, {2}}]& ]}, {
           TagBox[{
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             PointBox[CompressedData["
1:eJxdVgtUjeka3hMm3fflv+/dZe90RjSIGWPQ9MRUozljpjhDhOREiCkaMWaM
mJAooTFymVGIKZ3jTiKy3CY5paVmzsyYRZZKHJ1DyCRn1/fu/a/lX2uvvb71
fd/7Pu/zPO/7/+a4z6LiHTQaTYv11/WfXdHWNyZbiz3+ycFtWX3gXF+QFOSs
w/wzSeFFR33BlYTf+oIzwP2Kn/mAi4XWHKq1cfo9o32Q3hJ5wivdgGOZUVva
ksy437Vs8cCwuU5m/TU/fGA9XRLO4bsx/g4Rad6Y2f3oULjx57zIKF+6r0eT
vC2tOduCJ1Y0FW16HFs1wUsJsKA7XYkOWbN3hH39P9taj0a3ZMudeRbKp8N7
GZ4l7vUWJAd1VcBh9za974p8L5zvKq/CgMrq3qs9H/sgprtgPaqEqAcBey1U
r4CU6U0OpTMlqo+Hd1zan7lBRgzpfgwIud5zzf4HZvh3B+DwZk16zJJePoRX
gEvt4+TOZQLh43Ct8ra4z9eT4gl4OGj4R4cei+hOV2/AlOsLxOwKHzpvQMT2
yqB3+pjB9OCR+1HtSO8/FSztDsDj5bcnZ9y+JSFva9fDYfzA4bFNjZ4UT491
5dvCBn9ooX0DqmLz5l8fZ0ZUFz2RHCZMGlyywOJNfHHYiUvRn/5iJPw89v1Y
usbZLGN3V7gCHjcm33q3uVMkPBz+8VuWwxHZi+4bEL6p32sdGT6kpwF9x6xe
nvWDmfCKaJ++8EXaUQPlN2BJ9e9ThCtmOs/Dz5QwOT9SJn4lzJ3oGDlji4H4
1SPn0/LJxYcs0HQ/HOR4SX8k3ofwSQgMyzsZUaWn+CJm/71t8cA3eKpfxNIb
S9w0sRyteTQeLw4MHC+h2x5BAlYkPsgsrJfIDzzqluc9ObpGRtXVrodHzL/G
OJ3+1YaPQ83QmY33qr1pn8Mkh4j8tFMmdNv7FofBs3NSLjuaCL+AgMM9Xx+a
JZK+PMblhm4p+Uqh8zKi8w7s4gO0xAeHzTuing+64EX18Dg7KGNm0lqbHhx2
bVknlSd5Eh4B1cWnM1bWccQ3h1Cj442AYV6UT4TeRSy7W2ZAd7gTAgaL30+P
WSXQfR73GqqfeXsp5H8e79UfnHoo3Ajv7obk0TYhQjOhRSF/WXkU/Gen7zIR
PiMOlny2ecDk3tRvRlQprfc2a50JrxE5DQuXjnrqSP3NQwhpSCxeJFG9ChJH
bTjtvsud+BRxPGlv9ADeQHrzCE3OvX9ziZHqE3BIk788UyuR/9T4jG8eI1xf
3vvyB4XmDY95OwwrS0tteBXsvlKwyCXFneoTMO3DMpRViIRXwMV1FamLygWK
LyElofDMx4Ke+DFiX8j5CxdlN8InYsavZWWF9zmKJ2JV1RZ5YgBP+QQg7lj9
xlSB8Il46/r6VL9SjuoXcLxS7NURK5AfedQWN151na2QXwVszdo5p2IRT/0n
wbng2dSwCzrSU0HRSEtC3/MedF7Gm0EDxpffdSM9RBx8ltVsnWbkNwkjB/91
tXus7T6P3suyjT9NE2k+ihh1bpxXf2+O1hzK+mfsv9lsIn0ErF02VSx+zBM/
PB6++7xz1ACB+LDOPd1Pd5vzJcIr4Orx8c59ZJHmC4dzpjM7a0tt81SE4znf
7QH3eeJPwaPO0ugVjlrqRwGvt3rU5SQIVA+P7X+Z/+happH0UucL87uC0eM7
hvYKc6e1gIkfZGtvl9vq57EzpGbt2AiZ9JDR8tsb3wxcoSV/Cij33ibtcBII
j4z3ly9+EbhaR34SkLD05sx8B5HWVh8aouOfZOipP3gUj9h9MaJJIH0lTA4v
d37+Tz2tRXQU9DQ3VnP0PlDnE8svQppWdj0rjKN4InL9XkRrvjdQPiN8I76t
m7TPme4rWOJ/qT3+Yy35U8LpS6v/ePa1nvBLOJy08NGkxQbyl4qH6csjxDHz
d+1h27xT77N9AX2Sa35p523+NEJ3nxNaBXfiT8Km+NZNMYV6wq/2F+NbQGtk
bXbuUJ70U/D5qU9GDnvmTvUo9vnH/KLqyfZFjGw7d3PdVJ7wSPAf68uFztOR
n0TErBwy6ecmW3/KiHHMzzOG2vYV1LmtSWgf60Z+kuFZ1FEX846O/Ctgf1JV
TUKWzc+KvT6GV8CsuXdHn3UTKL/Vt+sfPA0560R8iCi4kx432jq3WXwJowbE
bl4QayB9PKk/7gYzPY1oPVzz4iveic6r85PVK8McMivj804bHzLcEvUta5Jt
awUOPv2euxS5Uv8oeOJ2Mq3jbVeajxLCTjfPQY2O1uo+w6tY9R3+n74NrtT/
sn2esfkhIanuUcV0s578oOClJvJlbIoHnbfyHXe7IaDJQPgVHGvdMFCpsumt
zm9Wv4Rduy/z2XV6Oq/OPzYvrHr2cbzzNNzWvxL6ewryrOl66m/5FX8rWFg0
IvhQvpbyqf3A8KnzkfGtYGxxVmj8UTfyp8onwydD33S2oijKdl6m7yMPwmdC
5LrA/j3Te1J+ESPmLPgu9ogNv/o+YP6Q7flY/xkx9/KJM7UnXchfIjLX7/E7
0MNA+QTEXbaUDllue9/J2Osb8e+3KrTkX9nuR6afjFPK5h0nH2rJnxKerC0R
pzy24Zfg0uPAF/c22fSX8Uliv8o2WUvvI5Pdj2weyXY+Gf+qH5m/1Hys363f
BZ1VlcNanakeFR/TS8G2Opf2vW+70H2jvf+Yn9TzTD/Vn6weGa6GitSkZg/C
I9vnCeNHwZj9JT/6bfcgfiR7vzP/qv3B8qn1Mv0laAMCjdde6kgvdR4xP6j1
Mb4kbC0vTP1bgJ74fPV7Q7Hrz+IbsSpn7vCl3o6Ex4j2gI1fFiY6UX+baH60
B7P4MoxSQ1PORi3hUfEy/CoeVr8n6fvfYJbfROvXyG8m0lND88KIyxeCUlNK
e1N/GLHhmx4n/pjiTPqY7PGYf9T8TB91zfynnmf8G2n/dervV/dNhFujYX5T
8TC+1Pisv1T8TA8T6dkRzPygxvs/UAMEGg==
              "]]}, 
            Annotation[#, {{Legended}, Charting`Private`Tag$25674, {
              1}}]& ], {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {3.9216666666666766`, -0.9960845305480684}, 
         DisplayFunction :> Identity, Epilog -> {
           Dashing[{0, Small}], 
           LineBox[{{3.99, 14.422383846157075`}, {7.27, 4.447661614667776}}]},
          Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 320, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           InterpretationBox[
           "\"b-value: \\!\\(\\*FormBox[\\\"1.3207215925772844`\\\", \
TraditionalForm]\\)\"", 
            StringForm["b-value: ``", 1.3207215925772844`], Editable -> 
            False], TraditionalForm], 
         PlotRange -> {{3.9216666666666766`, 7.27}, {-0.9960845305480684, 
          12.728591634637175`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Events number\"", "\"Cumulative number\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                   "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJwVxX08FPYfAPDzsPMwcnryFMfdKclDm5KMPpfGipDyEIbmoQdRhFCrnaUl
tQqNQqR56NranXQmxvfTlRVHv8nRr/OQOOdZ1CVC9/vtj/frbRZ+dHeUMoVC
Cfu/f9+yfW1zZMhqtGrseBghUsAhn4xSVqw5rqo9YLFXncL+iVvW0FTDwn6L
9yJH/0VouZdn+o7FQuph7QmG8RwUhM2NHytj4pTd9OYm+3mooHnUiuyYmDF5
cbQ8ehaqvIwmTVoYKM0Jo/1HPgVNJUeTJg8zcMyo+03ywTlo+Skz9pwuA4tz
1LXJ16PAtqwMv19nhiY51LfDC7MQoqN0IeuQGVowtAcCjYcAq6xyjxmaYVZF
G0/r2yEojoxzeN5qirfm9OjbRTMQmSSO+uaMKd6tcinaMtgPAykG6qcdTZGt
fGZBC6TQYvhRHCGj42z+N829B+RgHVzzhX8QHS+MUplMowHgzKglHP/HBDXD
1/73ab8ELJ/3WyRvN0ENzzInsewtLNiEW+oJjVHSX/dYf2sfvB7d4U53NsYa
cM7z1e6AjpmtP+97sAoDou9+Otk+BY3OfLxnvwrvfMiueBbbCYLB/KB3943Q
ytOTy1x4Bg/pyVmqG4wwu+iVV779BDhUeRW3VBniBvemut60VvB7Ilm9cYMh
7jS3WoxiIyh9+KHKUmCA+Qe2zTmNDoO7cqNXob0BdkYUagy4toNvt8GakzX6
yBZJPO89SoPMav7XtY76OMXj/LWaX0AKQrt3eNXrodu0vKmXIQP6iUkna7Ye
Yt9meyX6ZUhRfAj0erQSEz8x3Nh1SIbqTMa4bivxRcW1LjWrAbh/MXX15uYV
qA/FhrFFJeRsdC5txnMF+h8XvN6f9Dc5WCYP72pbjkL3ld7KzD6ga/UkSf2W
I8fZA264pZHP5IbW2pJlqJEnjfl5+DlJPms95BO6DMWP/+jKVmohPgHXj/D6
l2L01UXmhWU9YPo5bYJxYCkKj67xW3Khlfj02PRxx3TxOkftRmlvJ4k7VqTj
EqeLicqHKA/OS2BxOip9RE5DN0dmcLB7M6lScU8rSqUhP/aLAhMTMWFx1s02
LOigsHD/HpXUdtC7vM/Wn6qDnJwx5oggk6xzEzlTaEvQ9suKbxt4YmLeeV1R
a6CNGpEspnyxg9Do8ZfTmVoY0qyqYpDeDuksNgRbf46S8ps2Y9cek9BtI1nO
mzSRnSvh1je1E4s/KjZabtXAjEBW/EDQM3B+Zaige6ijk/rzjhl5A/nliFRq
7KeGzxI+nd/p10rQ6Mk8I4yK9kVq/aGbWonG9KYEm0OfYZDocPiI61Nw2eib
DQmqGPndw74fu56SB8nrBX6nVHDBWGt5yZ4n5E7Ucfe4c8rokDiwSRZfD+a7
trddylJCJws7kd80n2gHh7/gF1AQwfdYcqKQrDglnfzNQ0EoN1x3lv8SQmJ4
W3jzYYtkOSU+/PRUBbFSnNi1K3GeqHp7J6wr+osknfNw5WbMEX252d71T+8S
RuB3NOqNDyTukRNlbOgSYZwodNlf+Z4kZnaxB0N/I39eiUttanxHXrMySsuq
75Jqx5QQW8k0adg6L4wPLSVrfoxwse15Q3Zf5HxkmpQT3SFUqFDHiWNzesav
duWkUsU4tdtmmGjdWR9d+PYWadkW4FITICVX4g6mvNfNJ7STmfO5nD7Sd3yh
4FTgVRKl6Vc8tfslWV9JdhxJySEUnauyP0vbCKVTe7qAG0L8jXUuUSceEcrO
r86MVZ6HMZHDrmyXW+RKokPqndOl8Erntiw2TwD73NKq37jwQdAtFGpZNAPl
lkfz6Hg1fB8jIzZCMfDX1sjEinoQ5/7a6xvXDfpLLnOl1xsBZoN+cNLph2u0
dUc1nVrgPnfyd0/ZIPyTaeO9MqENhsW3dUPrR4D/8lSIaP4laKiyH8denYC9
X3pRw4t7IPdaTEyDYAocbqtHXLF/BZFLuXzXkrdwcy3PzrZ4EAIED6tbLsrh
po950rll41B4sP7snpQZWNDkcWoXpsGh7AVTEjELe70UvJtLPsLvyXm5+7w/
guQ0lozvoLD/B8v+ANU=
         "]]}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-11.512925464970204`, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          
          Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
           WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
          Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
         Automatic, Automatic}, {{{-11.512925464970229`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 
            0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 
            0.}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TagBox[
              InterpretationBox[
               StyleBox["\"0.010\"", ShowStringCharacters -> False], 
               0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
                DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
            0.}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox[
               StyleBox["\"0.100\"", ShowStringCharacters -> False], 
               0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
                DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}}, {
           0., 
            FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
            FormBox["10", TraditionalForm], {0.01, 
            0.}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-13.122363377404328`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.716898269296165`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.429216196844383`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.206072645530174`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.02375108873622, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11.86960040890896, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11.736069016284437`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11.618285980628055`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.819778284410283`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.41431317630212, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.126631103850338`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.903487552536127, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.721165995742174, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.567015315914915, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.433483923290392, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.315700887634009, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3.912023005428146, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3.506557897319982, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3.2188758248682006`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.995732273553991, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.8134107167600364`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.659260036932778, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.5257286443082556`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.4079456086518722`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-1.6094379124341003`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-1.2039728043259361`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.916290731874155, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.6931471805599453, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.5108256237659907, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.35667494393873245`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.2231435513142097, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.10536051565782628`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           0.6931471805599453, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.0986122886681098`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.3862943611198906`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.6094379124341003`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.791759469228055, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.9459101490553132`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           2.0794415416798357`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           2.1972245773362196`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           2.995732273553991, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           3.4011973816621555`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           3.6888794541139363`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           3.912023005428146, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.0943445622221, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.248495242049359, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.382026634673881, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.499809670330265, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.605170185988092, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}, {{-11.512925464970229`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-6.907755278982137, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-4.605170185988091, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-2.3025850929940455`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
           0., 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
           2.302585092994046, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
            0.}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-13.122363377404328`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.716898269296165`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.429216196844383`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.206072645530174`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-12.02375108873622, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11.86960040890896, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11.736069016284437`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-11.618285980628055`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.819778284410283`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.41431317630212, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-10.126631103850338`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.903487552536127, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.721165995742174, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.567015315914915, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.433483923290392, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-9.315700887634009, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3.912023005428146, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3.506557897319982, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-3.2188758248682006`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.995732273553991, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.8134107167600364`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.659260036932778, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.5257286443082556`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-2.4079456086518722`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-1.6094379124341003`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-1.2039728043259361`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.916290731874155, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.6931471805599453, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.5108256237659907, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.35667494393873245`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.2231435513142097, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}, {-0.10536051565782628`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           0.6931471805599453, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.0986122886681098`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.3862943611198906`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.6094379124341003`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.791759469228055, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           1.9459101490553132`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           2.0794415416798357`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           2.1972245773362196`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           2.995732273553991, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           3.4011973816621555`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           3.6888794541139363`, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           3.912023005428146, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.0943445622221, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.248495242049359, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.382026634673881, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.499809670330265, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
           4.605170185988092, 
            FormBox[
             TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
            0.}}}}}],
      GridLines->FrontEndValueCache[{
         Charting`ScaledTickValues[{Log, Exp}], 
         Automatic}, {{{-11.512925464970229`, 
           Directive[]}, {-9.210340371976182, 
           Directive[]}, {-6.907755278982137, 
           Directive[]}, {-4.605170185988091, 
           Directive[]}, {-2.3025850929940455`, 
           Directive[]}, {0., 
           Directive[]}, {2.302585092994046, 
           Directive[]}}, Automatic}],
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->320,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(log\\), \\(10\\)]\\) distance \
of\\ninterevent times bin counts\\n from exponential distr\"", 
        TraditionalForm],
      PlotRange->{{-11.512925464970229`, 2.302585092994046}, {-3., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->FrontEndValueCache[{
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
         Automatic}, {{{-11.512925464970229`, 
           FormBox[
            TemplateBox[{"10", 
              RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], {0.01, 
           0.}}, {-9.210340371976182, 
           FormBox[
            TemplateBox[{"10", 
              RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], {0.01, 
           0.}}, {-6.907755278982137, 
           FormBox["0.001`", TraditionalForm], {0.01, 
           0.}}, {-4.605170185988091, 
           FormBox[
            TagBox[
             InterpretationBox[
              StyleBox["\"0.010\"", ShowStringCharacters -> False], 
              0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
               DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
           0.}}, {-2.3025850929940455`, 
           FormBox[
            TagBox[
             InterpretationBox[
              StyleBox["\"0.100\"", ShowStringCharacters -> False], 
              0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
               DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}}, {
          0., 
           FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
           FormBox["10", TraditionalForm], {0.01, 0.}}, {-13.815510557964274`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-13.122363377404328`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-12.716898269296165`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-12.429216196844383`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-12.206072645530174`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-12.02375108873622, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-11.86960040890896, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-11.736069016284437`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-11.618285980628055`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-10.819778284410283`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-10.41431317630212, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-10.126631103850338`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-9.903487552536127, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-9.721165995742174, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-9.567015315914915, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-9.433483923290392, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-9.315700887634009, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-8.517193191416238, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-8.111728083308073, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-7.824046010856292, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-7.600902459542082, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-7.418580902748128, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-7.264430222920869, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-7.1308988302963465`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-7.013115794639964, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-6.214608098422191, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-5.809142990314028, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-5.521460917862246, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-5.298317366548036, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-5.115995809754082, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-4.961845129926823, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-4.8283137373023015`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-4.710530701645918, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-3.912023005428146, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-3.506557897319982, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-3.2188758248682006`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-2.995732273553991, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-2.8134107167600364`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-2.659260036932778, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-2.5257286443082556`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-2.4079456086518722`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-1.2039728043259361`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.916290731874155, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.6931471805599453, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.5108256237659907, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.35667494393873245`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.2231435513142097, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
           0.}}, {-0.10536051565782628`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          0.6931471805599453, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.0986122886681098`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.3862943611198906`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.6094379124341003`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.791759469228055, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          1.9459101490553132`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.0794415416798357`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.1972245773362196`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          2.995732273553991, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          3.4011973816621555`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          3.6888794541139363`, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          3.912023005428146, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          4.0943445622221, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          4.248495242049359, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          4.382026634673881, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          4.499809670330265, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
          4.605170185988092, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
         Automatic}]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8948643458152027`*^9, 3.894864925626933*^9, 
  3.894864970352358*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"78560d80-7459-42a2-b2b2-d53aa72fd012"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3) Interactive Panel", "Subsection",
 CellChangeTimes->{{3.8396738342805862`*^9, 3.8396738459168453`*^9}, {
  3.839782349323394*^9, 
  3.839782351721727*^9}},ExpressionUUID->"beb23643-7bec-4ebe-91e6-\
692fb9311777"],

Cell["this cell launches the main interactie data analysis panel", "Text",
 CellChangeTimes->{{3.839771481797944*^9, 3.839771526197939*^9}, {
  3.894864491763659*^9, 
  3.894864500671523*^9}},ExpressionUUID->"17cd7e79-31f1-4c0e-a694-\
1502552c3799"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", "orig"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cattspan", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"orig", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cin_", "?", "NumberQ"}], ",", 
        RowBox[{"cout_", "?", "NumberQ"}]}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"timespanorder", "=", 
         RowBox[{"10", "^", 
          RowBox[{"Floor", "@", 
           RowBox[{"Log10", "@", 
            RowBox[{"Abs", "[", 
             RowBox[{"cout", "-", "cin"}], "]"}]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"cin", ",", "timespanorder"}], "]"}], ",", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"cout", ",", "timespanorder"}], "]"}]}], "}"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"multiplets", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"n", "=", "1"}], ";", 
   RowBox[{"out", "=", "file"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "currmultip", " ", "must", " ", "be", " ", "set", " ", "to", " ", "1", 
     " ", "when", " ", "randomizing", " ", "and", " ", "when", " ", 
     "choosing", " ", "randomized", " ", "catalog"}], ",", " ", 
    RowBox[{
     RowBox[{"before", " ", "'"}], 
     RowBox[{"clustaction", "'"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"currmultip", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fl3d", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ts", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "10"}], "]"}]}], ";", 
  RowBox[{"nts", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "10"}], "]"}]}], ";", 
  RowBox[{"catalogue", "=", "0"}], ";", 
  RowBox[{"rj", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"amag", ",", "amagL", ",", "amagH", ",", "arem", ",", "arad"}], 
     "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<N/A\>\"", ",", "\"\<N/A\>\"", ",", "\"\<N/A\>\"", ",", 
      "\"\<N/A\>\"", ",", "\"\<N/A\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"outcdf", "=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", 
     "clusterizzazione", " ", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**"}], "****)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tspan", "=", "timespan"}], ";", 
     RowBox[{"td", "=", "t"}], ";", 
     RowBox[{"(*", 
      RowBox[{"**", 
       RowBox[{"*", " ", "DEBUG"}]}], " ", "****)"}], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"(*", " ", 
       RowBox[{"scelta", " ", "catalogue"}], " ", "*)"}],
      Background->RGBColor[0.9, 1, 1]], "\[IndentingNewLine]", 
     RowBox[{"clustaction", "=", 
      RowBox[{
       StyleBox["Hold",
        Background->RGBColor[0.9, 1, 1]], 
       StyleBox["[",
        Background->RGBColor[0.9, 1, 1]], 
       StyleBox["\[IndentingNewLine]",
        Background->RGBColor[0.9, 1, 1]], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"ricalcola", " ", "gli", " ", "indici", " ", "DOPO", " ", 
         RowBox[{"l", "'"}], "eventuale", " ", "prefiltraggio"}], " ", "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{
        StyleBox[
         RowBox[{"datai", "=", "1"}],
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox[";",
         Background->RGBColor[0.9, 1, 1]], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"localmag", ",", "\[IndentingNewLine]", 
          RowBox[{"data", "=", "orig"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Beep", "[", "]"}], ";", 
           RowBox[{"data", "=", 
            RowBox[{
             StyleBox["Table",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["[",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.9, 1, 1]], 
             RowBox[{
              StyleBox[
               RowBox[{"Append", "[", 
                RowBox[{"newcat", ",", 
                 RowBox[{"datai", "++"}]}], "]"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[",",
               Background->RGBColor[0.9, 1, 1]], 
              RowBox[{
               StyleBox["{",
                Background->RGBColor[0.9, 1, 1]], 
               RowBox[{
                StyleBox["newcat",
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox[",",
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[0.9, 1, 1]], 
                RowBox[{
                 StyleBox["Cases",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["[",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 RowBox[{
                  StyleBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"catalogue", "==", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Most", "/@", "orig"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "reconstruct", " ", "randomized", " ", "catalog"}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ts", "\[LeftDoubleBracket]", "catalogue", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "orig", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "]"}], "]"}], ",",
                     "First"}], "]"}]}], "]"}],
                   Background->RGBColor[0.9, 1, 1]], 
                  StyleBox[",",
                   Background->RGBColor[0.9, 1, 1]], 
                  RowBox[{
                   StyleBox[
                    RowBox[{"{", 
                    RowBox[{"t_", ",", "x_", ",", "m_"}], "}"}],
                    Background->RGBColor[0.9, 1, 1]], 
                   StyleBox["/;",
                    Background->RGBColor[0.9, 1, 1]], 
                   RowBox[{
                    RowBox[{"magthresh", 
                    StyleBox["-",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[CapitalDelta]magL",
                    Background->RGBColor[0.9, 1, 1]]}], 
                    StyleBox["\[LessEqual]",
                    Background->RGBColor[0.9, 1, 1]], "m"}]}]}], "]"}]}], 
               "}"}]}], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["]",
              Background->RGBColor[0.9, 1, 1]]}]}]}]}], 
         StyleBox["\[IndentingNewLine]",
          Background->RGBColor[0.9, 1, 1]], 
         StyleBox["]",
          Background->RGBColor[0.9, 1, 1]]}], 
        StyleBox[";",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox[
         RowBox[{"multiplets", "=", 
          RowBox[{"{", "}"}]}],
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox[";",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox[
         RowBox[{"mp", "=", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "data", "]"}], "]"}]}],
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox[";",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox[
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"<<", 
            RowBox[{"<", " ", "MP"}]}], " ", ">>>"}], " ", "*)"}],
         FontColor->RGBColor[1, 0, 0],
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[0.9, 1, 1]], 
        RowBox[{
         StyleBox["clusters",
          Background->RGBColor[0.9, 1, 1]], 
         StyleBox["=",
          Background->RGBColor[0.9, 1, 1]], 
         RowBox[{
          RowBox[{
           StyleBox["Reap",
            Background->RGBColor[0.9, 1, 1]], 
           StyleBox["[",
            Background->RGBColor[0.9, 1, 1]], 
           StyleBox["\[IndentingNewLine]",
            Background->RGBColor[0.9, 1, 1]], 
           RowBox[{
            StyleBox["While",
             Background->RGBColor[0.9, 1, 1]], 
            StyleBox["[",
             Background->RGBColor[0.9, 1, 1]], 
            RowBox[{
             StyleBox[
              RowBox[{
               RowBox[{"Length", "[", "mp", "]"}], ">", "0"}],
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox[",",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox[
              RowBox[{"(*", 
               RowBox[{"**", 
                RowBox[{"*", " ", "PIVOT"}]}], " ", "****)"}],
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.9, 1, 1]], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.9, 1, 1]], 
             RowBox[{
              StyleBox[
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "<", 
                   RowBox[{"Length", "[", "data", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], ",", "3"}], 
                    "\[RightDoubleBracket]"}], "<", "magthresh"}]}], ",", 
                 RowBox[{"n", "++"}]}], "]"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"j", "=", 
                RowBox[{
                "mp", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}]}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"(*", " ", 
                RowBox[{
                "delete", " ", "all", " ", "indexes", " ", "less", " ", 
                 "than", " ", "pivot", " ", "event", " ", "mp", " ", "and", 
                 " ", "reset", " ", "of", " ", "n"}], " ", "*)"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"mp", "=", 
                RowBox[{"Drop", "[", 
                 RowBox[{"mp", ",", 
                  RowBox[{"n", "-", "1"}]}], "]"}]}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[" ",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"<<", 
                  RowBox[{"<", " ", "MP"}]}], " ", ">>>"}], " ", "*)"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"n", "=", "1"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"Sow", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{
                   "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", "1"}], "]"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"(*", " ", 
                RowBox[{"TIME", " ", "CONNECTED"}], " ", "*)"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"pool", "=", 
                RowBox[{"{", 
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}]}], "]"}], "}"}]}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              RowBox[{
               StyleBox["intpool",
                Background->RGBColor[0.9, 1, 1]], 
               StyleBox["=",
                Background->RGBColor[0.9, 1, 1]], 
               RowBox[{
                StyleBox["{",
                 Background->RGBColor[0.9, 1, 1]], 
                RowBox[{"Interval", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"gkt", "[", 
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], ",", "3"}], 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], "]"}], 
                "}"}]}], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], ")"}],
                   "&&", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"IntervalUnion", "@@", 
                    RowBox[{"(", 
                    RowBox[{"nextintpool", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"intpool", ",", 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"gkt", "[", 
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ",", "3"}], 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], "]"}]}], 
                    "]"}]}], ")"}]}], "]"}], " ", "<", "2"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"intpool", "=", "nextintpool"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"pool", ",", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "mp", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"n", "++"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "here", " ", "n", " ", "points", " ", "to", " ", "end", " ",
                    "of", " ", "time"}], "-", 
                  RowBox[{"connected", " ", "only", " ", "events"}]}], ",", 
                 " ", 
                 RowBox[{
                 "corresponding", " ", "indexes", " ", "are", " ", "not", " ", 
                  RowBox[{"eliminated", ":", " ", 
                   RowBox[{
                    RowBox[{
                    "searching", " ", "for", " ", "the", " ", "space"}], "-", 
                    
                    RowBox[{"time", " ", "ones"}]}]}]}]}], " ", "*)"}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"connected", "=", 
                RowBox[{"intersections", "=", 
                 RowBox[{"gkconnected", "=", 
                  RowBox[{"{", "}"}]}]}]}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              RowBox[{
               StyleBox["If",
                Background->RGBColor[0.9, 1, 1]], 
               StyleBox["[",
                Background->RGBColor[0.9, 1, 1]], 
               RowBox[{
                StyleBox[
                 RowBox[{
                  RowBox[{"Length", "[", "pool", "]"}], ">", "1"}],
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox[",",
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox[
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                   "parallel", " ", "filtering", " ", "on", " ", "pool", " ", 
                    "through", " ", "iper"}], "-", 
                   RowBox[{
                   "space", " ", "intersection", " ", "following", " ", "GK", 
                    " ", "radii", " ", 
                    RowBox[{"(", 
                    RowBox[{"hypercylinders", ":", " ", 
                    RowBox[{
                    "spherical", " ", "base", " ", "and", " ", "height", " ", 
                    
                    RowBox[{"gkt", "[", "mag", "]"}]}]}], ")"}], " ", "and", 
                    " ", "\[CapitalDelta]mag", " ", "limit"}]}], " ", "*)"}],
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[0.9, 1, 1]], 
                RowBox[{
                 RowBox[{
                  StyleBox["intersections",
                   Background->RGBColor[0.9, 1, 1]], 
                  StyleBox["=",
                   Background->RGBColor[0.9, 1, 1]], 
                  RowBox[{
                   StyleBox[
                    RowBox[{"Subsets", "[", 
                    RowBox[{"pool", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}],
                    Background->RGBColor[0.9, 1, 1]], 
                   StyleBox["/.",
                    Background->RGBColor[0.9, 1, 1]], 
                   RowBox[{
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "n1_Integer", ",", "t1_", ",", "c1_", ",", "m1_", ",", 
                    "_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "n2_Integer", ",", "t2_", ",", "c2_", ",", "m2_", ",", 
                    "_"}], "}"}]}], "}"}],
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[RuleDelayed]",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["Rule",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["[",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2"}], "}"}],
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["And",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["[",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"c1", ",", "c2"}], "]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gkr", "[", "m1", "]"}], "+", 
                    RowBox[{"gkr", "[", "m2", "]"}]}], ")"}]}], ","}], "*)"}],
                    
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"c1", ",", "c2"}], "]"}], "\[LessEqual]", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"gkrad", ",", "\"\<1st\>\"", ",", 
                    RowBox[{"gkr", "[", "m1", "]"}], ",", "\"\<max\>\"", ",", 
                    
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"gkr", "[", "m1", "]"}], ",", 
                    RowBox[{"gkr", "[", "m2", "]"}]}], "]"}], ",", 
                    "\"\<sum\>\"", ",", 
                    RowBox[{
                    RowBox[{"gkr", "[", "m1", "]"}], "+", 
                    RowBox[{"gkr", "[", "m2", "]"}]}]}], "]"}]}],
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"t2", "-", "t1"}], "\[LessEqual]", 
                    RowBox[{"gkt", "[", "m1", "]"}]}],
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "3"}], "\[RightDoubleBracket]"}], "-", 
                    "m2"}], "]"}], "\[LessEqual]", "\[CapitalDelta]magthr"}], 
                    "*)"}],
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox[
                    RowBox[{"-", "\[CapitalDelta]magH"}],
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[LessEqual]",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    RowBox[{
                    StyleBox["If",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["[",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["localmag",
                    Background->RGBColor[0.9, 1, 1]], ",", "m1", ",", 
                    StyleBox[" ",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "3"}], "\[RightDoubleBracket]"}],
                    Background->RGBColor[0.9, 1, 1]]}], 
                    StyleBox["]",
                    Background->RGBColor[0.9, 1, 1]]}], 
                    StyleBox["-",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["m2",
                    Background->RGBColor[0.9, 1, 1]]}], 
                    StyleBox["\[LessEqual]",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[CapitalDelta]magL",
                    Background->RGBColor[0.9, 1, 1]]}]}], 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["]",
                    Background->RGBColor[0.9, 1, 1]]}]}], 
                    StyleBox["]",
                    Background->RGBColor[0.9, 1, 1]]}]}]}]}], 
                 StyleBox[";",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "here", " ", "pool", " ", "contains", " ", "events", " ", 
                    "connected", " ", "through", " ", "space"}], "-", 
                    RowBox[{"time", " ", "only"}]}], ",", " ", 
                    RowBox[{"NO", " ", 
                    RowBox[{"mag", ":", " ", 
                    RowBox[{
                    "remove", " ", "the", " ", "elements", " ", "of", " ", 
                    "this", " ", "pool", " ", "from", " ", "mp"}]}]}]}], " ", 
                   "*)"}],
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[
                  RowBox[{"gkconnected", "=", 
                   RowBox[{"Union", "@", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Cases", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subsets", "[", 
                    RowBox[{"pool", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}], "/.", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "n1_Integer", ",", "t1_", ",", "c1_", ",", "m1_", ",", 
                    "_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "n2_Integer", ",", "t2_", ",", "c2_", ",", "m2_", ",", 
                    "_"}], "}"}]}], "}"}], "\[RuleDelayed]", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"n1", ",", "n2"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"And", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"c1", ",", "c2"}], "]"}], "\[LessEqual]", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"gkrad", ",", "\"\<1st\>\"", ",", 
                    RowBox[{"gkr", "[", "m1", "]"}], ",", "\"\<max\>\"", ",", 
                    
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"gkr", "[", "m1", "]"}], ",", 
                    RowBox[{"gkr", "[", "m2", "]"}]}], "]"}], ",", 
                    "\"\<sum\>\"", ",", 
                    RowBox[{
                    RowBox[{"gkr", "[", "m1", "]"}], "+", 
                    RowBox[{"gkr", "[", "m2", "]"}]}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"t2", "-", "t1"}], "\[LessEqual]", 
                    RowBox[{"gkt", "[", "m1", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"e1_", ",", "e2_"}], "}"}], ",", "True"}], "}"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"e1", ",", "e2"}], "}"}]}]}], "]"}]}]}]}],
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[";",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[
                  RowBox[{"graph", "=", 
                   RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Cases", "[", 
                    RowBox[{"intersections", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"e1_", ",", "e2_"}], "}"}], "\[Rule]", "True"}], 
                    ")"}], "\[RuleDelayed]", 
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"e1", ",", "e2"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], 
                    "]"}]}],
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[";",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "get", " ", "cluster", " ", "starting", " ", "from", " ", 
                    "j", " ", "only", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "if", " ", "j", " ", "has", " ", "been", " ", "erased", 
                    " ", "there", " ", "is", " ", "no", " ", "output"}], 
                    ")"}]}], " ", "*)"}],
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[
                  RowBox[{"connected", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "@", 
                    RowBox[{
                    "WeaklyConnectedComponents", "[", "graph", "]"}]}], ",", 
                    "j"}], "]"}], ",", 
                    RowBox[{"VertexOutComponent", "[", 
                    RowBox[{"graph", ",", "j"}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}],
                  Background->RGBColor[0.9, 1, 1]]}]}], 
               StyleBox["]",
                Background->RGBColor[0.9, 1, 1]]}], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              RowBox[{
               StyleBox["If",
                Background->RGBColor[0.9, 1, 1]], 
               StyleBox["[",
                Background->RGBColor[0.9, 1, 1]], 
               RowBox[{
                StyleBox[
                 RowBox[{
                  RowBox[{"Length", "[", "connected", "]"}], ">", "1"}],
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox[",",
                 Background->RGBColor[0.9, 1, 1]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[0.9, 1, 1]], 
                RowBox[{
                 StyleBox[
                  RowBox[{"Sow", "[", 
                   RowBox[{"connected", ",", "2"}], "]"}],
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[";",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox[
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"j", ",", "graph", ",", "gkconnected"}], "}"}], 
                    ",", "3"}], "]"}], ";"}], "*)"}],
                  Background->RGBColor[0.9, 1, 1]], 
                 StyleBox["\[IndentingNewLine]",
                  Background->RGBColor[0.9, 1, 1]], 
                 RowBox[{
                  StyleBox["Sow",
                   Background->RGBColor[0.9, 1, 1]], 
                  StyleBox["[",
                   Background->RGBColor[0.9, 1, 1]], 
                  RowBox[{
                   RowBox[{
                    StyleBox["{",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["j",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["pool",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["gkconnected",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["intersections",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox[",",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["graph",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["/.",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["VertexStyle",
                    Background->RGBColor[0.9, 1, 1]], 
                    StyleBox["\[Rule]",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    StyleBox["(",
                    Background->RGBColor[0.9, 1, 1]], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "\[Rule]", "Orange"}], ")"}], "&"}], "/@", 
                    "connected"}], ")"}]}]}]}], "}"}], ",", "3"}], "]"}]}]}], 
               "\[IndentingNewLine]", "]"}], ";", 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], "\[IndentingNewLine]", 
              StyleBox[
               RowBox[{"mp", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{"mp", ",", " ", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"<<", 
                    RowBox[{"<", " ", "MP"}]}], " ", ">>>"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"Switch", "[", 
                   RowBox[{
                   "removed", ",", "\"\<GK\>\"", ",", "gkconnected", ",", 
                    "\"\<GK-Mag\>\"", ",", 
                    RowBox[{"VertexList", "[", "graph", "]"}], ",", 
                    "\"\<None\>\"", ",", 
                    RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", "j", "}"}]}], "]"}]}],
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[";",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[" ",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.9, 1, 1]], 
              StyleBox[
               RowBox[{"n", "=", "1"}],
               Background->RGBColor[0.9, 1, 1]]}]}], 
            StyleBox[" ",
             Background->RGBColor[0.9, 1, 1]], 
            StyleBox[
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"remove", " ", "from", " ", "mp", " ", "gk"}], "-", 
               RowBox[{"connected", " ", 
                RowBox[{"events", "'"}], " ", "indexes"}]}], " ", "*)"}],
             Background->RGBColor[0.9, 1, 1]], 
            StyleBox["\[IndentingNewLine]",
             Background->RGBColor[0.9, 1, 1]], 
            StyleBox["]",
             Background->RGBColor[0.9, 1, 1]]}], 
           StyleBox["\[IndentingNewLine]",
            Background->RGBColor[0.9, 1, 1]], 
           StyleBox["]",
            Background->RGBColor[0.9, 1, 1]]}], 
          StyleBox["\[LeftDoubleBracket]",
           Background->RGBColor[0.9, 1, 1]], 
          StyleBox["2",
           Background->RGBColor[0.9, 1, 1]], 
          StyleBox["\[RightDoubleBracket]",
           Background->RGBColor[0.9, 1, 1]]}]}], 
        StyleBox[";",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[0.9, 1, 1]], 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[0.9, 1, 1]], 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "clusters", "]"}], "\[Equal]", "1"}], ",", 
          " ", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "SE", " ", "non", " ", "ci", " ", "sono", " ", "multiplets"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<NO multiplets\>\"", "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"clusters", "=", 
            RowBox[{"{", 
             RowBox[{"clusters", ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"multiplets", "=", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"sub", "-", 
             RowBox[{"clusters", " ", "are", " ", "eliminated"}]}], ",", " ", 
            
            RowBox[{"IF", " ", 
             RowBox[{
              RowBox[{"present", " ", "!!"}], "!"}]}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"es", ".", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"59", ",", "60", ",", "23", ",", "42"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"108", ",", "109", ",", 
                 StyleBox["111",
                  FontColor->RGBColor[0.5, 0, 0.5]], 
                 StyleBox[",",
                  FontColor->RGBColor[0.5, 0, 0.5]], 
                 StyleBox["116",
                  FontColor->RGBColor[0.5, 0, 0.5]]}], "}"}], ",", 
               StyleBox[
                RowBox[{"{", 
                 RowBox[{"111", ",", "116"}], "}"}],
                FontColor->RGBColor[0.5, 0, 0.5]], ",", 
               RowBox[{"{", 
                RowBox[{"123", ",", "124"}], "}"}]}], "}"}], " ", 
             "\[LongRightArrow]", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"59", ",", "60", ",", "23", ",", "42"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"108", ",", "109", ",", "111", ",", "116"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"123", ",", "124"}], "}"}]}], "}"}]}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"multiplets", "=", 
             RowBox[{"Most", "@", 
              RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{
                   RowBox[{
                   "clusters", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "2", ",", "1", ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", "}"}]}], "]"}], "/.", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "cl1__Integer", "}"}], ",", 
                    RowBox[{"{", "cl2__Integer", "}"}]}], "}"}], 
                  "\[RuleDelayed]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    RowBox[{"{", "cl1", "}"}], ",", 
                    RowBox[{"{", "cl2", "}"}]}], "]"}], ",", "Nothing", ",", 
                    RowBox[{"{", "cl2", "}"}]}], "]"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"clusters", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
               "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"multiplets", "=", 
            RowBox[{
            "clusters", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"t", "=", 
            RowBox[{"clusters", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1", ",", "2", ",", "1", ",", "2"}], "]"}], 
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
       StyleBox["\[IndentingNewLine]",
        Background->RGBColor[0.9, 1, 1]], 
       StyleBox["]",
        Background->RGBColor[0.9, 1, 1]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", " ", 
       "clustering", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**",
        "**"}], "****)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "select", " ", "only", " ", "timespan", " ", "eventi", " ", "to", " ", 
       "simplify", " ", "calculations"}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"records", " ", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"data", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{"t", "-", 
           RowBox[{"0.2", "*", 
            RowBox[{"10", "^", "timespan"}]}]}], "\[LessEqual]", 
          RowBox[{"First", "[", "x", "]"}], "<", 
          RowBox[{"t", "+", 
           RowBox[{"1.8", "*", 
            RowBox[{"10", "^", "timespan"}]}]}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"select", " ", "multiplets", " ", "inside", " ", "timespan"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cluscelti", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"multiplets", ",", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"SubsetQ", "[", 
            RowBox[{
             RowBox[{"records", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", 
               RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", "#"}], 
            "]"}], "&"}], ")"}]}]}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "nearest", " ", "functs", " ", "ai", " ", "tempi", " ", "dei", " ", 
       "clusters"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"couples", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "#events"}], "}"}], " ", "for", " ", "any", 
       " ", "found", " ", "multiplet"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"clustimes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], "/.", 
           RowBox[{"i_Integer", "\[RuleDelayed]", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
       "multiplets"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"nearest", " ", "functions"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"multiplets", "\[NotEqual]", " ", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"nft", "=", 
          RowBox[{"Nearest", "[", "clustimes", "]"}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nfti2", "=", 
         RowBox[{"Nearest", "[", 
          RowBox[{"clustimes", "\[Rule]", "\"\<Index\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "extract", " ", "the", " ", "multiplet", " ", "that", " ", "is", " ",
           "nearest", " ", "to", " ", "actual", " ", "t", " ", "value", " ", 
          "and", " ", "minimum", " ", "mag", " ", "indexed", " ", "in", " ", 
          "currmultip"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"multip", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "multiplets", "\[LeftDoubleBracket]", "currmultip", 
             "\[RightDoubleBracket]"}], "/.", 
            RowBox[{"i_Integer", "\[RuleDelayed]", 
             RowBox[{
             "data", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}]}], "//.", 
           RowBox[{
            RowBox[{"{", "dum_", "}"}], "\[RuleDelayed]", "dum"}]}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"multip", "=", 
         RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "graphics", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<`` (``)\>\"", ",", 
           RowBox[{"FileBaseName", "[", "file", "]"}], ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"catalogue", "\[Equal]", "0"}], ",", "\"\<Original\>\"", 
             ",", 
             RowBox[{"catalogue", ">", "0"}], ",", 
             RowBox[{"\"\<Randomized \[Rule] \>\"", "<>", 
              RowBox[{
              "nts", "\[LeftDoubleBracket]", "catalogue", 
               "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<mags:`` \[Rule] `` events, magmin:`` \[Rule] `` events\>\"", 
           ",", 
           RowBox[{"MinMax", "[", 
            RowBox[{"orig", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"Length", "[", "orig", "]"}], ",", 
           RowBox[{"Min", "[", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"Length", "[", "data", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Actual mag values: (``\[DoubleLongLeftArrow]``\
\[DoubleLongRightArrow]``) radius: ``, remove policy: ``\>\"", ",", "amagL", 
           ",", "amag", ",", "amagH", ",", "arad", ",", "arem"}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"view", ",", "\"\<3D plot\>\""}], "]"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"multiplets", "\[NotEqual]", " ", 
                 RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<refers to \[FilledCircle]\>\"", ",", 
                    "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<tspan\>\"", ",", 
                    RowBox[{"-", 
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"MinMax", "[", 
                    RowBox[{
                    "multip", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}]}]}], "}"}], ",", 
                    StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[1, 0.85, 0.85]], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Data\>\"", ",", 
                    RowBox[{"DateString", "[", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    RowBox[{"Quantity", "[", 
                    RowBox[{
                    RowBox[{"multip", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "\"\<years\>\""}], "]"}], ",", "\"\<seconds\>\""}], "]"}],
                     "]"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<file\\nlines\>\"", ",", 
                    RowBox[{"TableForm", "@", 
                    RowBox[{
                    "multip", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<seq.\\nmag.\>\"", ",", 
                    RowBox[{"TableForm", "@", 
                    RowBox[{
                    "multip", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], 
                   "\[IndentingNewLine]", "}"}], ",", 
                  RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
                "\[IndentingNewLine]", "Nothing"}], "\[IndentingNewLine]", 
               "]"}], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.88, 1, 0.88]], 
              StyleBox[",",
               Background->RGBColor[0.88, 1, 0.88]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[0.88, 1, 0.88]], 
              StyleBox[
               RowBox[{"Graphics3D", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"FaceForm", "[", "None", "]"}], ","}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"cyls", "=", 
                    RowBox[{"records", "/.", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t_", ",", 
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], ",", "mag_", 
                    ",", "id_"}], "}"}], "\[RuleDelayed]", 
                    RowBox[{"Which", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Quiet", "@", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    "clusters", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "id"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Opacity", "[", ".05", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Blue", ",", 
                    RowBox[{"Opacity", "[", ".2", "]"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"gkDisk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "t", ",", "mag", ",",
                     "id"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "@", "cluscelti"}], ",", "id"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Opacity", "[", ".05", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Opacity", "[", ".2", "]"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"gkDisk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "t", ",", "mag", ",",
                     "id"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    "True", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", ".6", "]"}], ",", "Dotted"}], 
                    "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", "None", "]"}], ",", 
                    RowBox[{"gkDisk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "t", ",", "mag", ",",
                     "id"}], "]"}]}], "}"}]}], "}"}]}], "]"}]}]}]}], ",", 
                   "\[IndentingNewLine]", "Thick", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Hue", "[", 
                    RowBox[{"RandomReal", "[", "]"}], "]"}], ",", 
                    RowBox[{"Line", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{"cluscelti", "/.", 
                    RowBox[{"i_Integer", "\[RuleDelayed]", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Green", ",", "Dotted", ",", 
                    RowBox[{"Line", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{"cpticlustersID", "/.", 
                    RowBox[{"i_Integer", "\[RuleDelayed]", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "2", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], ")"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
                   "Red", ",", 
                   RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{
                    RowBox[{"multip", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "/.", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t_", ",", 
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "y_", ",", "_"}], "}"}], ",", "__"}], 
                    "}"}], "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "t"}], "}"}]}]}], "]"}]}], 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "indicatore", " ", "cluster", " ", "con", " ", "INFO"}], 
                   " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
                 RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                 RowBox[{"BoxRatios", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", " ", "1", ",", " ", "1.5"}], "}"}]}], 
                 ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "200"}], ",", "200"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "200"}], ",", "200"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"t", "-", 
                    RowBox[{".2", "*", 
                    RowBox[{"10", "^", "timespan"}]}]}], ",", 
                    RowBox[{"t", "+", 
                    RowBox[{"1.8", "*", 
                    RowBox[{"10", "^", "timespan"}]}]}]}], "}"}]}], "}"}]}]}],
                 "]"}],
               Background->RGBColor[0.88, 1, 0.88]]}], 
             StyleBox["\[IndentingNewLine]",
              Background->RGBColor[0.88, 1, 0.88]], 
             StyleBox["}",
              Background->RGBColor[0.88, 1, 0.88]]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Labeled", "[", 
          RowBox[{
           RowBox[{"Dynamic", "@", 
            RowBox[{"Length", "[", "mp", "]"}]}], ",", 
           "\"\<Events to be analysed: \>\"", ",", "Left"}], "]"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"selected", " ", "cluster", " ", "info", " ", "line"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "multip", "]"}], ">", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<cluster of `` events, Pivot Id/time: `` / ``, mag(s): ``\>\
\"", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"First", "[", "multip", "]"}], "]"}], ",", 
               RowBox[{"multip", "[", 
                RowBox[{"[", 
                 RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"multip", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", ".01"}], "]"}],
                ",", 
               RowBox[{"OpenerView", "[", 
                RowBox[{"Column", "/@", 
                 RowBox[{"TakeDrop", "[", 
                  RowBox[{
                   RowBox[{"multip", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}]}], 
                "]"}]}], "]"}], ",", "Red"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{"multiplets", "===", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<No multiplets found for these parameters\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", "24"}], ",", "Red"}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"EventHandler", "[", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ListLogPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"clustimes", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "clustimes", "\[LeftDoubleBracket]", "currmultip", 
                   "\[RightDoubleBracket]"}], "}"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"cattspan", ",", "All"}], "}"}]}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", 
                RowBox[{"1", "/", "8"}]}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Red"}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Red", ",", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "50"}], "}"}]}], "}"}], "]"}]}], 
                 "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"currmultip", "=", 
                 RowBox[{
                  RowBox[{"nfti2", "[", 
                   RowBox[{
                    RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "/.", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "y_"}], "}"}], "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Exp", "[", "y", "]"}]}], "}"}]}]}], "]"}], 
                  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                ";", 
                RowBox[{"t", "=", 
                 RowBox[{
                  RowBox[{
                  "clustimes", "\[LeftDoubleBracket]", "currmultip", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}]}], ")"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Current multiplet index: `` \[Rule] ``\>\"", ",", 
             "currmultip", ",", 
             RowBox[{
             "clustimes", "\[LeftDoubleBracket]", "currmultip", 
              "\[RightDoubleBracket]"}]}], "]"}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "**", "**", "**", "**", "**", "**", "**", " ", "temporal"}], " ", 
           "barchart", " ", 
           RowBox[{"plot", " ", "**", "**", "**", "**", "**"}], "*", 
           RowBox[{"**", "*"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"view", ",", "\"\<m_Hist\>\""}], "]"}], "&&", 
            RowBox[{"multiplets", "\[NotEqual]", " ", 
             RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Labeled", "[", 
            RowBox[{
             RowBox[{"Histogram", "[", 
              RowBox[{
               RowBox[{"clustimes", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"Append", "[", 
                RowBox[{"cattspan", ",", "binsize"}], "]"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", 
                RowBox[{"1", "/", "8"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], 
             "\[IndentingNewLine]", ",", 
             "\"\<Multiplets occurrences over time (every binsize years)\>\"",
              ",", "Top"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"**", "**", "**", "**", "**"}], "**", "**", " ", 
            "decisional"}], " ", "graph", " ", 
           RowBox[{"plot", "**", "**", "**", "**"}], "*", 
           RowBox[{"**", "**"}], "*"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"view", ",", "\"\<Graph\>\""}], "]"}], "&&", 
            RowBox[{"multiplets", "\[NotEqual]", " ", 
             RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "j1", ",", "pool1", ",", "gkc1", ",", "intsz1", ",", "gph1"}], 
              "}"}], "=", 
             RowBox[{"clusters", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "currmultip"}], 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"nfti", "[", "t", "]"}], "//.", 
                RowBox[{
                 RowBox[{"{", "dum_", "}"}], "\[RuleDelayed]", "dum"}]}], 
               "*)"}], "\[RightDoubleBracket]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"vcoords", "=", 
             RowBox[{"pool1", "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "i_Integer", ",", "t_", ",", "p_", ",", "m_", ",", "_"}], 
                "}"}], "\[RuleDelayed]", 
               RowBox[{"i", "\[Rule]", " ", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "m"}], "}"}]}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"vcols", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", "\[Rule]", "Orange"}], "}"}], "&"}], "/@", 
               RowBox[{"VertexOutComponent", "[", 
                RowBox[{"gph1", ",", "j1"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nodes", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"allnodes", "\[Equal]", "True"}], ",", 
               RowBox[{"pool1", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"VertexList", "[", "gph1", "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"vdim", "=", 
             RowBox[{".05", " ", 
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{"Divide", "@@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"MinMax", "[", "#", "]"}]}], "&"}], "/@", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{"nodes", "/.", "vcoords"}], "]"}]}], ")"}]}], ",",
                 "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cmag", "=", 
             RowBox[{"pool1", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Panel", "@", 
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Graph", "[", 
                 RowBox[{"nodes", ",", 
                  RowBox[{"Cases", "[", 
                   RowBox[{"intsz1", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"e1_", ",", "e2_"}], "}"}], "\[Rule]", "True"}], 
                    ")"}], "\[RuleDelayed]", 
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"e1", ",", "e2"}], "]"}]}]}], "]"}], ",", 
                  RowBox[{
                  "GraphLayout", "\[Rule]", "\"\<LinearEmbedding\>\""}], ",", 
                  
                  RowBox[{"VertexCoordinates", "\[Rule]", "vcoords"}], ",", 
                  RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
                  RowBox[{"VertexSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"j1", "\[Rule]", 
                    RowBox[{"2", " ", "vdim"}]}], ",", "vdim"}], "}"}]}], ",",
                   " ", 
                  RowBox[{"EdgeStyle", "\[Rule]", 
                   RowBox[{"Arrowheads", "[", ".025", "]"}]}], ",", 
                  RowBox[{"VertexStyle", "\[Rule]", "vcols"}], ",", 
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
                  RowBox[{"Prolog", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Orange", ",", 
                    RowBox[{"il", "[", 
                    RowBox[{"cmag", "+", "\[CapitalDelta]magH"}], "]"}], ",", 
                    
                    RowBox[{"il", "[", 
                    RowBox[{"cmag", "-", "\[CapitalDelta]magL"}], "]"}], ",", 
                    
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"j1", "/.", "vcoords"}], "]"}], ",", 
                    RowBox[{"cmag", "-", "\[CapitalDelta]magH"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"j1", "/.", "vcoords"}], "]"}], ",", 
                    RowBox[{"cmag", "+", "\[CapitalDelta]magH"}]}], "}"}]}], 
                    "}"}], "]"}], ",", "Dashed", ",", "Black", ",", 
                    RowBox[{"il", "[", "magthresh", "]"}]}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "540"}]}], "]"}], ",", 
                RowBox[{"Spacer", "[", "10", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Show", "[", 
                 RowBox[{"gph1", ",", 
                  RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], "}"}], 
              "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    StyleBox[
                    RowBox[{
                    "\"\<Mag thr: ``, \[CapitalDelta]m-: ``, \
\[CapitalDelta]m+: ``\>\"", ",", "magthresh", ",", " ", "\[CapitalDelta]magL",
                     ",", " ", "\[CapitalDelta]magH"}],
                    Background->RGBColor[1, 0.9, 0.8]], 
                    StyleBox["]",
                    Background->RGBColor[1, 0.9, 0.8]]}], 
                   StyleBox[",",
                    Background->RGBColor[1, 0.9, 0.8]], 
                   StyleBox["SpanFromLeft",
                    Background->RGBColor[1, 0.9, 0.8]]}], 
                  StyleBox["}",
                   Background->RGBColor[1, 0.9, 0.8]]}], 
                 StyleBox["}",
                  Background->RGBColor[1, 0.9, 0.8]]}], 
                StyleBox[",",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<Removing events: ``\>\"", ",", "removed"}], 
                    "]"}], ",", "SpanFromLeft"}], "}"}], "}"}],
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[",",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<`` clusters generated\>\"", ",", 
                    RowBox[{"Length", "[", "multiplets", "]"}]}], "]"}], ",", 
                    "SpanFromLeft"}], "}"}], "}"}],
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[",",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<elements\>\"", ",", "\"\<clusters count\>\""}], "}"}],
                   "}"}],
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[",",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox["\[IndentingNewLine]",
                 Background->RGBColor[1, 0.9, 0.8]], 
                StyleBox[
                 RowBox[{"Sort", "[", 
                  RowBox[{"Tally", "[", 
                   RowBox[{"Length", "/@", "multiplets"}], "]"}], "]"}],
                 Background->RGBColor[1, 0.9, 0.8]]}], 
               StyleBox["\[IndentingNewLine]",
                Background->RGBColor[1, 0.9, 0.8]], 
               StyleBox["]",
                Background->RGBColor[1, 0.9, 0.8]]}], 
              StyleBox[",",
               Background->RGBColor[1, 0.9, 0.8]], 
              StyleBox[
               RowBox[{"Frame", "\[Rule]", "All"}],
               Background->RGBColor[1, 0.9, 0.8]]}], 
             StyleBox["]",
              Background->RGBColor[1, 0.9, 0.8]]}], 
            StyleBox[",",
             Background->RGBColor[1, 0.9, 0.8]], 
            StyleBox[
             RowBox[{"Spacer", "[", "30", "]"}],
             Background->RGBColor[1, 0.9, 0.8]], 
            StyleBox[",",
             Background->RGBColor[1, 0.9, 0.8]], 
            StyleBox["\[IndentingNewLine]",
             Background->RGBColor[1, 0.9, 0.8]], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"multiplets", "\[NotEqual]", " ", 
               RowBox[{"{", "}"}]}], ",", 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[1, 0.9, 0.8]], 
              StyleBox[
               RowBox[{"Histogram", "[", 
                RowBox[{
                 RowBox[{"Length", "/@", "multiplets"}], ",", 
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"Ticks", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Range", "[", " ", 
                    RowBox[{
                    RowBox[{"Floor", "[", "#1", "]"}], ",", 
                    RowBox[{"Ceiling", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
                    "Automatic"}], "}"}]}], ",", 
                 RowBox[{"AxesLabel", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<elements\>\"", ",", "\"\<clusters count\>\""}], 
                   "}"}]}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}],
               Background->RGBColor[1, 0.9, 0.8]], 
              StyleBox[",",
               Background->RGBColor[1, 0.9, 0.8]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[1, 0.9, 0.8]], 
              StyleBox[
               RowBox[{"Spacer", "[", "300", "]"}],
               Background->RGBColor[1, 0.9, 0.8]]}], 
             StyleBox["]",
              Background->RGBColor[1, 0.9, 0.8]]}]}], 
           StyleBox["\[IndentingNewLine]",
            Background->RGBColor[1, 0.9, 0.8]], 
           StyleBox["}",
            Background->RGBColor[1, 0.9, 0.8]]}], 
          StyleBox["]",
           Background->RGBColor[1, 0.9, 0.8]]}], 
         StyleBox[",",
          Background->RGBColor[1, 0.9, 0.8]], 
         StyleBox["\[IndentingNewLine]",
          Background->RGBColor[1, 0.9, 0.8]], 
         StyleBox["\[IndentingNewLine]",
          Background->RGBColor[1, 0.9, 0.8]], 
         StyleBox[
          RowBox[{"(*", " ", 
           RowBox[{"Catalogue", " ", "RANDOMIZE"}], "  ", "*)"}],
          FontSize->24,
          Background->RGBColor[1, 0.9, 1]], 
         StyleBox["\[IndentingNewLine]",
          FontSize->24,
          Background->RGBColor[1, 0.9, 1]], 
         RowBox[{
          StyleBox["EventHandler",
           Background->RGBColor[1, 0.9, 1]], 
          StyleBox["[",
           Background->RGBColor[1, 0.9, 1]], 
          StyleBox["\[IndentingNewLine]",
           Background->RGBColor[1, 0.9, 1]], 
          StyleBox[" ",
           Background->RGBColor[1, 0.9, 1]], 
          RowBox[{
           RowBox[{
            StyleBox["Labeled",
             Background->RGBColor[1, 0.9, 0.8]], 
            StyleBox["[",
             Background->RGBColor[1, 0.9, 0.8]], 
            StyleBox[
             RowBox[{
              RowBox[{"SetterBar", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "catalogue", "]"}], ",", 
                RowBox[{"Prepend", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", "rj", "]"}], ",", 
                  RowBox[{"0", "\[Rule]", "\"\<original\>\""}]}], "]"}]}], 
               "]"}], ",", "\"\<Catalog randomize:\>\"", ",", " ", "Left"}],
             Background->RGBColor[1, 0.9, 1]], 
            StyleBox["]",
             Background->RGBColor[1, 0.9, 1]]}], 
           StyleBox[",",
            Background->RGBColor[1, 0.9, 1]], 
           StyleBox["\[IndentingNewLine]",
            Background->RGBColor[1, 0.9, 1]], 
           RowBox[{
            StyleBox["\"\<MouseClicked\>\"",
             Background->RGBColor[1, 0.9, 1]], 
            StyleBox[":>",
             Background->RGBColor[1, 0.9, 1]], 
            RowBox[{
             StyleBox["{",
              Background->RGBColor[1, 0.9, 1]], 
             RowBox[{
              RowBox[{"currmultip", "=", "1"}], ";", 
              RowBox[{"ReleaseHold", "[", "clustaction", "]"}]}], "}"}]}], 
           ",", 
           RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
           RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], 
          StyleBox["\[IndentingNewLine]",
           Background->RGBColor[1, 0.9, 1]], 
          StyleBox["]",
           Background->RGBColor[1, 0.9, 1]]}], 
         StyleBox[",",
          Background->RGBColor[1, 0.9, 1]], 
         StyleBox["\[IndentingNewLine]",
          Background->RGBColor[1, 0.9, 1]], 
         StyleBox["\[IndentingNewLine]",
          Background->RGBColor[1, 0.9, 1]], 
         RowBox[{
          StyleBox["Row",
           Background->RGBColor[1, 0.9, 0.8]], 
          StyleBox["[",
           Background->RGBColor[1, 0.9, 0.8]], 
          RowBox[{
           StyleBox["{",
            Background->RGBColor[1, 0.9, 0.8]], 
           RowBox[{
            StyleBox[
             RowBox[{"Button", "[", 
              RowBox[{"\"\<Randomize\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"times", " ", "re"}], "-", "calculation"}], ",", 
                 " ", 
                 RowBox[{
                  RowBox[{"substitution", " ", "and", " ", "re"}], "-", 
                  RowBox[{
                  "sort", " ", "of", " ", "catalogue", " ", "rows"}]}]}], " ",
                 "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"rj", "\[LessEqual]", "9"}], ",", 
                 RowBox[{
                  RowBox[{"trand", "=", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"cattspan", ",", 
                    RowBox[{"Length", "@", "orig"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"rj", "++"}], ";", 
                  RowBox[{
                   RowBox[{
                   "ts", "\[LeftDoubleBracket]", "rj", 
                    "\[RightDoubleBracket]"}], "=", "trand"}], ";", 
                  RowBox[{"catalogue", "=", "rj"}], ";", 
                  RowBox[{
                   RowBox[{
                   "nts", "\[LeftDoubleBracket]", "rj", 
                    "\[RightDoubleBracket]"}], "=", 
                   RowBox[{"FromCharacterCode", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"65", ",", "90"}], "}"}], ",", "4"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"currmultip", "=", "1"}], ";", 
                  RowBox[{"(*", " ", 
                   RowBox[{"avoid", " ", "error"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"ReleaseHold", "[", "clustaction", "]"}]}]}], "]"}],
                "\[IndentingNewLine]", ",", 
               RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}],
             Background->RGBColor[1, 0.9, 1]], 
            StyleBox[",",
             Background->RGBColor[1, 0.9, 1]], 
            StyleBox["\[IndentingNewLine]",
             Background->RGBColor[1, 0.9, 1]], 
            RowBox[{
             StyleBox["Button",
              Background->RGBColor[1, 0.9, 1]], 
             StyleBox["[",
              Background->RGBColor[1, 0.9, 1]], 
             RowBox[{
              StyleBox["\"\<Export\>\"",
               Background->RGBColor[1, 0.9, 1]], 
              StyleBox[",",
               Background->RGBColor[1, 0.9, 1]], 
              StyleBox["\[IndentingNewLine]",
               Background->RGBColor[1, 0.9, 1]], 
              RowBox[{"Export", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 StyleBox["out",
                  Background->RGBColor[1, 0.9, 1]], 
                 StyleBox["=",
                  Background->RGBColor[1, 0.9, 1]], 
                 RowBox[{
                  StyleBox["SystemDialogInput",
                   Background->RGBColor[1, 0.9, 1]], 
                  StyleBox["[",
                   Background->RGBColor[1, 0.9, 1]], 
                  RowBox[{
                   StyleBox["\"\<FileSave\>\"",
                    Background->RGBColor[1, 0.9, 1]], 
                   StyleBox[",",
                    Background->RGBColor[1, 0.9, 1]], 
                   StyleBox["\[IndentingNewLine]",
                    Background->RGBColor[1, 0.9, 1]], 
                   RowBox[{
                    RowBox[{
                    StyleBox["FileNameJoin",
                    Background->RGBColor[1, 0.9, 1]], 
                    StyleBox["[",
                    Background->RGBColor[1, 0.9, 1]], 
                    RowBox[{
                    StyleBox["{",
                    Background->RGBColor[1, 0.9, 1]], 
                    RowBox[{
                    RowBox[{"FileNameDrop", "[", 
                    StyleBox[
                    RowBox[{"out", ",", 
                    RowBox[{"-", "1"}]}],
                    Background->RGBColor[1, 0.9, 1]], 
                    StyleBox["]",
                    Background->RGBColor[1, 0.9, 1]]}], 
                    StyleBox[",",
                    Background->RGBColor[1, 0.9, 1]], 
                    RowBox[{"FileBaseName", "[", "file", "]"}]}], "}"}], 
                    "]"}], "<>", 
                    StyleBox["\"\<_\>\"",
                    Background->RGBColor[1, 0.9, 1]], 
                    StyleBox["<>",
                    Background->RGBColor[1, 0.9, 1]], 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"catalogue", ">", "0"}], ",", 
                    RowBox[{
                    "nts", "\[LeftDoubleBracket]", "catalogue", 
                    "\[RightDoubleBracket]"}], ",", "\"\<Orig\>\""}], "]"}], 
                    "<>", "\"\<.txt\>\""}]}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"StringRiffle", "[", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<filename: \>\"", "<>", 
                    RowBox[{"FileBaseName", "[", "file", "]"}], "<>", 
                    "\"\< (\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", "data", "]"}], "]"}], "<>", 
                    "\"\</\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", "orig", "]"}], "]"}], "<>", 
                    "\"\< eventi utilizzati)\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<catalogue: \>\"", "<>", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"catalogue", ">", "0"}], ",", 
                    RowBox[{
                    "nts", "\[LeftDoubleBracket]", "catalogue", 
                    "\[RightDoubleBracket]"}], ",", "\"\<Orig\>\""}], "]"}]}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<timespan: \>\"", "<>", 
                    RowBox[{"ToString", "[", "cattspan", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<binsize: \>\"", "<>", 
                    RowBox[{"ToString", "@", "binsize"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<magthresh: \>\"", ",", 
                    RowBox[{"ToString", "@", "magthresh"}], ",", 
                    "\"\< + \>\"", ",", 
                    RowBox[{"ToString", "@", "\[CapitalDelta]magL"}], ",", 
                    RowBox[{"\"\< - \>\"", "<>", 
                    RowBox[{"ToString", "@", "\[CapitalDelta]magH"}]}]}], 
                    "}"}], "]"}], ",", "\[IndentingNewLine]", 
                    "\"\<\\nvettore n. multiplette\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<removed: \>\"", "<>", "removed"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<GKradius: \>\"", "<>", "gkrad"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"BinCounts", "[", 
                    RowBox[{
                    RowBox[{"clustimes", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     ",", "binsize"}], "]"}], ",", "binsize"}], "}"}]}], 
                    "]"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                    "\"\<\\n\>\""}], "]"}], "\n", "}"}], "]"}], ",", 
                "\"\<String\>\""}], "]"}], ",", 
              RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"Button", "[", 
             StyleBox[
              RowBox[{"\"\<Reset\>\"", ",", 
               RowBox[{
                RowBox[{"rj", "=", "0"}], ";", 
                RowBox[{"catalogue", "=", "0"}], ";", 
                RowBox[{"ReleaseHold", "[", "clustaction", "]"}]}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}],
              Background->RGBColor[1, 0.9, 1]], 
             StyleBox["]",
              Background->RGBColor[1, 0.9, 1]]}]}], 
           StyleBox["}",
            Background->RGBColor[1, 0.9, 1]]}], 
          StyleBox["]",
           Background->RGBColor[1, 0.9, 1]]}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[1, 0.9, 1]], "}"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Show catalog global info\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"CreatePalette", "[", 
       RowBox[{
        RowBox[{"infodata", "[", "data", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"WindowTitle", "\[Rule]", "\"\<catalog global info\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        "0.02", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
        RowBox[{"Enabled", "->", "tview"}]}], "}"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"timespan", ",", "0.6"}], "}"}], ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"binsize", ",", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"timespanorder", "/", "10"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "1000"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "10", ",", "20", ",", "50", ",", "100", ",", "200", ",", "500", ",", 
        "1000"}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "Setter"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"magthresh", ",", "5.5", ",", "\"\<Magnitude threshold\>\""}], 
       "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "InputField"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalDelta]magL", ",", ".5", ",", 
        "\"\<\[CapitalDelta]mag to LOWER events\>\""}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "InputField"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalDelta]magH", ",", ".5", ",", 
        "\"\<\[CapitalDelta]mag to HIGHER events\>\""}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "InputField"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"localmag", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"removed", ",", "\"\<GK\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<GK\>\"", ",", "\"\<GK-Mag\>\"", ",", "\"\<None\>\""}], 
       "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gkrad", ",", "\"\<sum\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<1st\>\"", ",", "\"\<max\>\"", ",", "\"\<sum\>\""}], 
       "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Clusterize!\>\"", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "amag", ",", "amagL", ",", "amagH", ",", "arem", ",", "arad"}], 
         "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
         "magthresh", ",", "\[CapitalDelta]magL", ",", "\[CapitalDelta]magH", 
          ",", "removed", ",", "gkrad"}], "}"}]}], ";", 
       RowBox[{"ReleaseHold", "[", "clustaction", "]"}]}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"poolflag", ",", "\"\< NEW \>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\< OLD \>\"", ",", "\"\< NEW \>\""}], "}"}], ",", 
        RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ","}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Show counts\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DocumentNotebook", "[", "\[IndentingNewLine]", 
         RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Labeled", "[", 
               RowBox[{
                RowBox[{"FileBaseName", "[", "file", "]"}], ",", 
                "\"\<filename\>\"", ",", "Left"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Labeled", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"catalogue", ">", "0"}], ",", 
                  RowBox[{
                  "nts", "\[LeftDoubleBracket]", "catalogue", 
                   "\[RightDoubleBracket]"}], ",", "\"\<Orig\>\""}], "]"}], 
                ",", "\"\<filename\>\"", ",", "Left"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Labeled", "[", 
               RowBox[{"cattspan", ",", "\"\<timespan\>\"", ",", "Left"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Labeled", "[", 
               RowBox[{"binsize", ",", "\"\<binsize\>\"", ",", "Left"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Labeled", "[", 
               RowBox[{"magthresh", ",", "\"\<magthresh\>\"", ",", "Left"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Labeled", "[", 
               RowBox[{
               "\[CapitalDelta]magL", ",", "\"\<\[CapitalDelta]+\>\"", ",", 
                "Left"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Labeled", "[", 
               RowBox[{
               "\[CapitalDelta]magH", ",", "\"\<\[CapitalDelta]-\>\"", ",", 
                "Left"}], "]"}], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"TableForm", "[", 
               RowBox[{"BinCounts", "[", 
                RowBox[{
                 RowBox[{"clustimes", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"Append", "[", 
                  RowBox[{"cattspan", ",", "binsize"}], "]"}]}], "]"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "\"\<Text\>\""}], "\[IndentingNewLine]", 
          "]"}], "]"}], ",", 
        RowBox[{
        "WindowTitle", "\[Rule]", "\"\<Multiplets occurrences\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "@", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Button", "[", 
         RowBox[{"\"\< < Prev Cluster  \>\"", ",", 
          RowBox[{
           RowBox[{"currmultip", "=", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"currmultip", "-", "1"}], ",", "1"}], "]"}]}], ";", 
           RowBox[{"t", "=", 
            RowBox[{"clustimes", "\[LeftDoubleBracket]", 
             RowBox[{"currmultip", ",", "1"}], 
             "\[RightDoubleBracket]"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<  Next Cluster > \>\"", ",", 
          RowBox[{
           RowBox[{"currmultip", "=", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Length", "[", "clustimes", "]"}], ",", 
              RowBox[{"currmultip", "+", "1"}]}], "]"}]}], ";", 
           RowBox[{"t", "=", 
            RowBox[{"clustimes", "\[LeftDoubleBracket]", 
             RowBox[{"currmultip", ",", "1"}], 
             "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"view", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<m_Hist\>\"", ",", "\"\<3D plot\>\"", ",", "\"\<Graph\>\""}], 
       "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "CheckboxBar"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"allnodes", ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ContinuousAction", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8235884285388927`*^9, 3.823588495443959*^9}, {
   3.823845510920182*^9, 3.823845530477469*^9}, {3.823845575996768*^9, 
   3.8238455913783703`*^9}, {3.823845758050544*^9, 3.8238457810807333`*^9}, 
   3.823847891553302*^9, 3.82384932111896*^9, {3.825577835877681*^9, 
   3.8255778425937023`*^9}, 3.825736217521665*^9, {3.836471263056445*^9, 
   3.836471271125702*^9}, {3.8364714866437263`*^9, 3.8364715132842484`*^9}, {
   3.836471653744157*^9, 3.836471658945825*^9}, {3.836496757542679*^9, 
   3.836496759758896*^9}, {3.8364992423616657`*^9, 3.836499243629031*^9}, 
   3.83967471777665*^9, {3.839676041845565*^9, 3.839676066591168*^9}, {
   3.8396937352697487`*^9, 3.839693783912816*^9}, {3.839694248136758*^9, 
   3.839694265854533*^9}, {3.839694306418331*^9, 3.839694381744196*^9}, {
   3.839769047588644*^9, 3.839769050656055*^9}, {3.8397706312902107`*^9, 
   3.839770655602054*^9}, {3.840187756806294*^9, 3.840187773628858*^9}, {
   3.840187819021089*^9, 3.840187852988379*^9}, 3.840188641781755*^9, {
   3.840188760012298*^9, 3.840188761439795*^9}, 3.840189173123178*^9, {
   3.8401892708882627`*^9, 3.840189302940123*^9}, {3.840189388324565*^9, 
   3.84018938845142*^9}, {3.8401912688644047`*^9, 3.840191336380724*^9}, {
   3.84019146596171*^9, 3.840191508411092*^9}, {3.840191630777918*^9, 
   3.84019166384124*^9}, {3.8401924248860407`*^9, 3.840192563741365*^9}, {
   3.840192596197998*^9, 3.840192742769002*^9}, {3.84019278133071*^9, 
   3.8401928596373243`*^9}, {3.840192908708138*^9, 3.840192950786963*^9}, {
   3.840193020204067*^9, 3.8401931111868477`*^9}, {3.840193179547*^9, 
   3.840193181998708*^9}, {3.840193493630082*^9, 3.8401934954038267`*^9}, {
   3.840193529611856*^9, 3.840193536106921*^9}, {3.840193631222123*^9, 
   3.840193690405325*^9}, {3.840533948188821*^9, 3.840533976954206*^9}, {
   3.8405354284669037`*^9, 3.8405354529710073`*^9}, 3.840535749675865*^9, {
   3.840704244270751*^9, 3.840704275833312*^9}, {3.8407043184500647`*^9, 
   3.8407043245051327`*^9}, {3.8407043623557367`*^9, 3.840704377056919*^9}, {
   3.84070441444351*^9, 3.840704457539418*^9}, {3.840704534945601*^9, 
   3.840704555711648*^9}, {3.840704717725086*^9, 3.84070473672751*^9}, 
   3.840704794562161*^9, {3.840704933943141*^9, 3.8407049392680387`*^9}, {
   3.840705005603544*^9, 3.840705033065586*^9}, {3.840706057751877*^9, 
   3.840706060069825*^9}, {3.840706091826213*^9, 3.840706150770455*^9}, {
   3.840706383257655*^9, 3.84070643908143*^9}, {3.840706893366395*^9, 
   3.840706915995269*^9}, {3.8407070304537067`*^9, 3.8407071531402082`*^9}, {
   3.840707502974058*^9, 3.840707541633683*^9}, 3.875614903039392*^9, {
   3.877166009847836*^9, 3.8771660606849127`*^9}, {3.877166169605727*^9, 
   3.877166170226335*^9}, {3.877166225753718*^9, 3.877166246093216*^9}, {
   3.877166291374004*^9, 3.8771662919158792`*^9}, {3.8771663821560373`*^9, 
   3.8771663993291473`*^9}, {3.877166451766684*^9, 3.877166467406289*^9}, {
   3.877166509003765*^9, 3.8771665204295053`*^9}, {3.877166564458503*^9, 
   3.877166705248365*^9}, {3.894860155589229*^9, 3.894860210803413*^9}, {
   3.8948602832772837`*^9, 3.894860773332155*^9}, 3.894860843882215*^9, {
   3.894860960714992*^9, 3.894860962372343*^9}, {3.8948610242284327`*^9, 
   3.894861141506118*^9}, {3.894861176968134*^9, 3.894861279120417*^9}, {
   3.8948613174966383`*^9, 3.894861378875071*^9}, {3.894861415450716*^9, 
   3.8948615780608253`*^9}, {3.894861624585156*^9, 3.8948616848031397`*^9}, {
   3.8948617499645243`*^9, 3.894861750211*^9}, {3.8948618301007967`*^9, 
   3.8948618456313133`*^9}, {3.894861881761516*^9, 3.894861932439912*^9}, {
   3.894862006238338*^9, 3.894862097571392*^9}, {3.894862140559166*^9, 
   3.8948621446463633`*^9}, {3.894862993120873*^9, 3.894862999060966*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"cb56477e-96a3-4c55-9345-4a4c951c867f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`allnodes$$ = True, $CellContext`binsize$$ = 
    1000, $CellContext`gkrad$$ = "sum", $CellContext`localmag$$ = 
    False, $CellContext`magthresh$$ = 5.5, $CellContext`removed$$ = 
    "GK", $CellContext`timespan$$ = 
    0.6, $CellContext`view$$ = {}, $CellContext`\[CapitalDelta]magH$$ = 
    0.5, $CellContext`\[CapitalDelta]magL$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Button["Show catalog global info", 
        CreatePalette[
         $CellContext`infodata[$CellContext`data], WindowTitle -> 
         "catalog global info"]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`timespan$$], 0.6}, -2, 2}, {{
       Hold[$CellContext`binsize$$], 1000}, {10, 20, 50, 100, 200, 500, 
      1000}}, {{
       Hold[$CellContext`magthresh$$], 5.5, "Magnitude threshold"}}, {{
       Hold[$CellContext`\[CapitalDelta]magL$$], 0.5, 
       "\[CapitalDelta]mag to LOWER events"}}, {{
       Hold[$CellContext`\[CapitalDelta]magH$$], 0.5, 
       "\[CapitalDelta]mag to HIGHER events"}}, {{
       Hold[$CellContext`localmag$$], False}, {False, True}}, {{
       Hold[$CellContext`removed$$], "GK"}, {"GK", "GK-Mag", "None"}}, {{
       Hold[$CellContext`gkrad$$], "sum"}, {"1st", "max", "sum"}}, {
      Hold[
       Button[
       "Clusterize!", {$CellContext`amag, $CellContext`amagL, \
$CellContext`amagH, $CellContext`arem, $CellContext`arad} = \
{$CellContext`magthresh$$, $CellContext`\[CapitalDelta]magL$$, $CellContext`\
\[CapitalDelta]magH$$, $CellContext`removed$$, $CellContext`gkrad$$}; 
        ReleaseHold[$CellContext`clustaction], Method -> "Queued"]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Button["Show counts", 
        CreateWindow[
         DocumentNotebook[
          TextCell[
           Column[{
             Labeled[
              FileBaseName[$CellContext`file], "filename", Left], 
             Labeled[
              If[$CellContext`catalogue > 0, 
               Part[$CellContext`nts, $CellContext`catalogue], "Orig"], 
              "filename", Left], 
             Labeled[$CellContext`cattspan, "timespan", Left], 
             Labeled[$CellContext`binsize$$, "binsize", Left], 
             Labeled[$CellContext`magthresh$$, "magthresh", Left], 
             
             Labeled[$CellContext`\[CapitalDelta]magL$$, "\[CapitalDelta]+", 
              Left], 
             
             Labeled[$CellContext`\[CapitalDelta]magH$$, "\[CapitalDelta]-", 
              Left], 
             TableForm[
              BinCounts[
               Part[$CellContext`clustimes, All, 1], 
               Append[$CellContext`cattspan, $CellContext`binsize$$]]]}], 
           "Text"]], WindowTitle -> "Multiplets occurrences"]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Dynamic[
        Row[{
          Button[
          " < Prev Cluster  ", $CellContext`currmultip = 
            Max[$CellContext`currmultip - 1, 1]; $CellContext`t = 
            Part[$CellContext`clustimes, $CellContext`currmultip, 1]], 
          Button["  Next Cluster > ", $CellContext`currmultip = Min[
              Length[$CellContext`clustimes], $CellContext`currmultip + 
              1]; $CellContext`t = 
            Part[$CellContext`clustimes, $CellContext`currmultip, 1]]}]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[$CellContext`view$$], {"m_Hist", "3D plot", "Graph"}}, {
      Hold[$CellContext`allnodes$$], {True, False}}}, Typeset`size$$ = {
    616., {162.634033203125, 168.365966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`allnodes$$ = True, $CellContext`binsize$$ = 
        1000, $CellContext`gkrad$$ = "sum", $CellContext`localmag$$ = 
        False, $CellContext`magthresh$$ = 5.5, $CellContext`removed$$ = 
        "GK", $CellContext`timespan$$ = 
        0.6, $CellContext`view$$ = {}, $CellContext`\[CapitalDelta]magH$$ = 
        0.5, $CellContext`\[CapitalDelta]magL$$ = 0.5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`tspan = $CellContext`timespan$$; \
$CellContext`td = $CellContext`t; $CellContext`clustaction = 
        Hold[$CellContext`datai = 1; 
          If[$CellContext`localmag$$, $CellContext`data = $CellContext`orig, 
            Beep[]; $CellContext`data = Table[
               Append[$CellContext`newcat, 
                Increment[$CellContext`datai]], {$CellContext`newcat, 
                Cases[
                 If[$CellContext`catalogue == 0, 
                  Map[Most, $CellContext`orig], 
                  SortBy[
                   Transpose[
                    Join[{
                    Part[$CellContext`ts, $CellContext`catalogue]}, 
                    Take[
                    Transpose[$CellContext`orig], {2, -2}]]], First]], 
                 Condition[{
                   Pattern[$CellContext`t$, 
                    Blank[]], 
                   Pattern[$CellContext`x$, 
                    Blank[]], 
                   Pattern[$CellContext`m$, 
                    
                    Blank[]]}, $CellContext`magthresh$$ - $CellContext`\
\[CapitalDelta]magL$$ <= $CellContext`m$]]}]]; $CellContext`multiplets = {}; \
$CellContext`mp = Range[
             Length[$CellContext`data]]; $CellContext`clusters = Part[
             Reap[
              While[Length[$CellContext`mp] > 0, While[
                 And[
                 Part[$CellContext`mp, $CellContext`n] < 
                  Length[$CellContext`data], Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n], 
                    3] < $CellContext`magthresh$$], 
                 Increment[$CellContext`n]]; $CellContext`j = 
                Part[$CellContext`mp, $CellContext`n]; $CellContext`mp = 
                Drop[$CellContext`mp, $CellContext`n - 1]; $CellContext`n = 1; 
               Sow[{$CellContext`j, 
                  Part[$CellContext`mp, $CellContext`n]}, 
                 1]; $CellContext`pool = {
                  Prepend[
                   Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n]], 
                   
                   Part[$CellContext`mp, $CellContext`n]]}; \
$CellContext`intpool = {
                  Interval[{
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n], 1], 
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n], 
                    1] + $CellContext`gkt[
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n], 3]]}]}; While[
                 And[
                 Part[$CellContext`mp, $CellContext`n] < 
                  Length[$CellContext`data] - 1, Length[
                    Apply[
                    IntervalUnion, $CellContext`nextintpool = 
                    Append[$CellContext`intpool, 
                    Interval[{
                    
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n] + 1, 1], 
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n] + 1, 
                    1] + $CellContext`gkt[
                    
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n] + 1, 3]]}]]]] < 2], 
                 Increment[$CellContext`n]; $CellContext`intpool = \
$CellContext`nextintpool; AppendTo[$CellContext`pool, 
                   Prepend[
                    Part[$CellContext`data, 
                    Part[$CellContext`mp, $CellContext`n]], 
                    Part[$CellContext`mp, $CellContext`n]]]]; 
               Increment[$CellContext`n]; $CellContext`connected = \
($CellContext`intersections = ($CellContext`gkconnected = {})); 
               If[
                Length[$CellContext`pool] > 
                 1, $CellContext`intersections = ReplaceAll[
                    Subsets[$CellContext`pool, {2}], {{
                    Pattern[$CellContext`n1$, 
                    Blank[Integer]], 
                    Pattern[$CellContext`t1$, 
                    Blank[]], 
                    Pattern[$CellContext`c1$, 
                    Blank[]], 
                    Pattern[$CellContext`m1$, 
                    Blank[]], 
                    Blank[]}, {
                    Pattern[$CellContext`n2$, 
                    Blank[Integer]], 
                    Pattern[$CellContext`t2$, 
                    Blank[]], 
                    Pattern[$CellContext`c2$, 
                    Blank[]], 
                    Pattern[$CellContext`m2$, 
                    Blank[]], 
                    Blank[]}} :> ({$CellContext`n1$, $CellContext`n2$} -> 
                    And[EuclideanDistance[$CellContext`c1$, $CellContext`c2$] <= 
                    Switch[$CellContext`gkrad$$, "1st", 
                    $CellContext`gkr[$CellContext`m1$], "max", 
                    Max[
                    $CellContext`gkr[$CellContext`m1$], 
                    $CellContext`gkr[$CellContext`m2$]], 
                    "sum", $CellContext`gkr[$CellContext`m1$] + \
$CellContext`gkr[$CellContext`m2$]], $CellContext`t2$ - $CellContext`t1$ <= \
$CellContext`gkt[$CellContext`m1$], -$CellContext`\[CapitalDelta]magH$$ <= 
                    If[$CellContext`localmag$$, $CellContext`m1$, 
                    
                    Part[$CellContext`data, $CellContext`j, 
                    3]] - $CellContext`m2$ <= \
$CellContext`\[CapitalDelta]magL$$])]; $CellContext`gkconnected = Union[
                    Flatten[
                    Cases[
                    ReplaceAll[
                    Subsets[$CellContext`pool, {2}], {{
                    Pattern[$CellContext`n1$, 
                    Blank[Integer]], 
                    Pattern[$CellContext`t1$, 
                    Blank[]], 
                    Pattern[$CellContext`c1$, 
                    Blank[]], 
                    Pattern[$CellContext`m1$, 
                    Blank[]], 
                    Blank[]}, {
                    Pattern[$CellContext`n2$, 
                    Blank[Integer]], 
                    Pattern[$CellContext`t2$, 
                    Blank[]], 
                    Pattern[$CellContext`c2$, 
                    Blank[]], 
                    Pattern[$CellContext`m2$, 
                    Blank[]], 
                    Blank[]}} :> {{$CellContext`n1$, $CellContext`n2$}, 
                    And[
                    EuclideanDistance[$CellContext`c1$, $CellContext`c2$] <= 
                    Switch[$CellContext`gkrad$$, "1st", 
                    $CellContext`gkr[$CellContext`m1$], "max", 
                    Max[
                    $CellContext`gkr[$CellContext`m1$], 
                    $CellContext`gkr[$CellContext`m2$]], 
                    "sum", $CellContext`gkr[$CellContext`m1$] + \
$CellContext`gkr[$CellContext`m2$]], $CellContext`t2$ - $CellContext`t1$ <= \
$CellContext`gkt[$CellContext`m1$]]}], {{
                    Pattern[$CellContext`e1, 
                    Blank[]], 
                    Pattern[$CellContext`e2, 
                    Blank[]]}, 
                    True} :> {$CellContext`e1, $CellContext`e2}]]]; \
$CellContext`graph = Graph[
                    Cases[$CellContext`intersections, ({
                    Pattern[$CellContext`e1, 
                    Blank[]], 
                    Pattern[$CellContext`e2, 
                    Blank[]]} -> True) :> 
                    DirectedEdge[$CellContext`e1, $CellContext`e2]], 
                    VertexLabels -> "Name"]; $CellContext`connected = If[
                    MemberQ[
                    Flatten[
                    
                    WeaklyConnectedComponents[$CellContext`graph]], \
$CellContext`j], 
                    
                    VertexOutComponent[$CellContext`graph, $CellContext`j], \
{}]]; If[Length[$CellContext`connected] > 1, Sow[$CellContext`connected, 2]; 
                 Sow[{$CellContext`j, $CellContext`pool, \
$CellContext`gkconnected, $CellContext`intersections, 
                    
                    ReplaceAll[$CellContext`graph, VertexStyle -> 
                    Map[# -> Orange& , $CellContext`connected]]}, 
                   3]]; $CellContext`mp = Complement[$CellContext`mp, 
                  
                  Switch[$CellContext`removed$$, 
                   "GK", $CellContext`gkconnected, "GK-Mag", 
                   VertexList[$CellContext`graph], 
                   "None", {}], {$CellContext`j}]; $CellContext`n = 1]], 2]; 
          If[Length[$CellContext`clusters] == 
            1, $CellContext`clusters = {$CellContext`clusters, {}, {}}; \
$CellContext`multiplets = {}, $CellContext`multiplets = 
             Part[$CellContext`clusters, 2]; $CellContext`t = 
             Part[$CellContext`clusters, 3, 1, 2, 1, 2]; 
            Null]]; $CellContext`records = Cases[$CellContext`data, 
          Condition[
           Pattern[$CellContext`x$, 
            Blank[]], 
           
           Inequality[$CellContext`t - 0.2 10^$CellContext`timespan$$, 
            LessEqual, 
            First[$CellContext`x$], Less, $CellContext`t + 
            1.8 10^$CellContext`timespan$$]]]; $CellContext`cluscelti = 
        Cases[$CellContext`multiplets, 
          PatternTest[
           Blank[], SubsetQ[
            
            Part[$CellContext`records, 
             All, -1], #]& ]]; $CellContext`clustimes = Map[{
           ReplaceAll[
            First[#], Pattern[$CellContext`i, 
              Blank[Integer]] :> Part[$CellContext`data, $CellContext`i, 1]], 
           
           Length[#]}& , $CellContext`multiplets]; 
       If[$CellContext`multiplets != {}, $CellContext`nfti2 = 
          Nearest[$CellContext`clustimes -> "Index"]; $CellContext`multip = 
          Transpose[
            ReplaceRepeated[
             ReplaceAll[
              Part[$CellContext`multiplets, $CellContext`currmultip], 
              Pattern[$CellContext`i, 
                Blank[Integer]] :> Part[$CellContext`data, $CellContext`i]], {
              
               Pattern[$CellContext`dum, 
                Blank[]]} :> $CellContext`dum]], $CellContext`multip = {}; 
         Null]; Column[{
          StringForm["`` (``)", 
           FileBaseName[$CellContext`file], 
           
           Which[$CellContext`catalogue == 0, 
            "Original", $CellContext`catalogue > 0, "Randomized \[Rule] " <> 
            Part[$CellContext`nts, $CellContext`catalogue]]], 
          StringForm["mags:`` \[Rule] `` events, magmin:`` \[Rule] `` events", 
           MinMax[
            Part[$CellContext`orig, All, 3]], 
           Length[$CellContext`orig], 
           Min[
            Part[$CellContext`data, All, 3]], 
           Length[$CellContext`data]], 
          StringForm[
          "Actual mag values: (``\[DoubleLongLeftArrow]``\
\[DoubleLongRightArrow]``) radius: ``, remove policy: ``", \
$CellContext`amagL, $CellContext`amag, $CellContext`amagH, $CellContext`arad, \
$CellContext`arem], 
          If[
           MemberQ[$CellContext`view$$, "3D plot"], 
           Row[{
             If[$CellContext`multiplets != {}, 
              
              Grid[{{"refers to \[FilledCircle]", SpanFromLeft}, {
                "tspan", -Apply[Subtract, 
                   MinMax[
                    Part[$CellContext`multip, 1]]]}, {"file\nlines", 
                 TableForm[
                  Part[$CellContext`multip, 4]]}, {"seq.\nmag.", 
                 TableForm[
                  Part[$CellContext`multip, 3]]}}, Frame -> All], Nothing], 
             Graphics3D[{$CellContext`cyls = ReplaceAll[$CellContext`records, {
                   Pattern[$CellContext`t, 
                    Blank[]], {
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]], 
                    Pattern[$CellContext`z, 
                    Blank[]]}, 
                   Pattern[$CellContext`mag, 
                    Blank[]], 
                   Pattern[$CellContext`id, 
                    Blank[]]} :> Which[
                   Quiet[
                    MemberQ[
                    Part[$CellContext`clusters, 1], $CellContext`id]], {
                    FaceForm[{Blue, 
                    Opacity[0.05]}, {Blue, 
                    Opacity[0.2]}], 
                    $CellContext`gkDisk[{$CellContext`x, $CellContext`y}, \
$CellContext`t, $CellContext`mag, $CellContext`id]}, 
                   Quiet[
                    MemberQ[
                    Flatten[$CellContext`cluscelti], $CellContext`id]], {
                    FaceForm[{Red, 
                    Opacity[0.05]}, {Red, 
                    Opacity[0.2]}], 
                    $CellContext`gkDisk[{$CellContext`x, $CellContext`y}, \
$CellContext`t, $CellContext`mag, $CellContext`id]}, True, {
                    EdgeForm[{
                    Opacity[0.6], Dotted}], {
                    FaceForm[None], 
                    $CellContext`gkDisk[{$CellContext`x, $CellContext`y}, \
$CellContext`t, $CellContext`mag, $CellContext`id]}}]], Thick, 
               Map[{
                 Hue[
                  RandomReal[]], 
                 Line[#]}& , 
                ReplaceAll[$CellContext`cluscelti, Pattern[$CellContext`i, 
                   Blank[Integer]] :> Append[
                   Part[$CellContext`data, $CellContext`i, 2, {1, 2}], 
                   Part[$CellContext`data, $CellContext`i, 1]]]], Red, 
               PointSize[0.02], 
               Point[
                ReplaceAll[
                 Part[$CellContext`multip, All, 1], {
                   Pattern[$CellContext`t, 
                    Blank[]], {
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]], 
                    Blank[]}, 
                   
                   BlankSequence[]} :> {$CellContext`x, $CellContext`y, \
$CellContext`t}]]}, SphericalRegion -> True, Axes -> True, 
              BoxRatios -> {1, 1, 1.5}, ImageSize -> Large, 
              PlotRange -> {{-200, 200}, {-200, 
                200}, {$CellContext`t - 0.2 
                 10^$CellContext`timespan$$, $CellContext`t + 
                 1.8 10^$CellContext`timespan$$}}]}]], Null, 
          Labeled[
           Dynamic[
            Length[$CellContext`mp]], "Events to be analysed: ", Left], 
          If[Length[$CellContext`multip] > 0, 
           Style[
            StringForm[
            "cluster of `` events, Pivot Id/time: `` / ``, mag(s): ``", 
             Length[
              First[$CellContext`multip]], 
             Part[$CellContext`multip, 4, 1], 
             Round[
              Part[$CellContext`multip, 1, 1], 0.01], 
             OpenerView[
              Map[Column, 
               TakeDrop[
                Part[$CellContext`multip, 3], 1]]]], Red]], 
          If[$CellContext`multiplets === {}, 
           Style[
           "No multiplets found for these parameters", {FontSize -> 24, Red}], 
           EventHandler[
            ListLogPlot[{$CellContext`clustimes, {
               Part[$CellContext`clustimes, $CellContext`currmultip]}}, 
             PlotRange -> {$CellContext`cattspan, All}, AspectRatio -> 1/8, 
             PlotStyle -> {Automatic, Red}, Filling -> Bottom, Frame -> True, 
             ImageSize -> Large, Epilog -> {Red, 
               Line[{{$CellContext`t, 0}, {$CellContext`t, 50}}]}], 
            "MouseClicked" :> ($CellContext`currmultip = Part[
                $CellContext`nfti2[
                 ReplaceAll[
                  MousePosition["Graphics"], {
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]]} :> {$CellContext`x, 
                    Exp[$CellContext`y]}]], 1]; $CellContext`t = Part[
                Part[$CellContext`clustimes, $CellContext`currmultip], 1])]], 
          
          If[
           And[
            
            MemberQ[$CellContext`view$$, 
             "m_Hist"], $CellContext`multiplets != {}], 
           Labeled[
            Histogram[
             Part[$CellContext`clustimes, All, 1], 
             Append[$CellContext`cattspan, $CellContext`binsize$$], 
             AspectRatio -> 1/8, ImageSize -> Large, Frame -> True], 
            "Multiplets occurrences over time (every binsize years)", Top]], 
          If[
           And[
            
            MemberQ[$CellContext`view$$, 
             "Graph"], $CellContext`multiplets != {}], {$CellContext`j1, \
$CellContext`pool1, $CellContext`gkc1, $CellContext`intsz1, \
$CellContext`gph1} = 
            Part[$CellContext`clusters, 
              3, $CellContext`currmultip]; $CellContext`vcoords = 
            ReplaceAll[$CellContext`pool1, {
                Pattern[$CellContext`i, 
                 Blank[Integer]], 
                Pattern[$CellContext`t, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`m, 
                 Blank[]], 
                
                Blank[]} :> ($CellContext`i -> {$CellContext`t, \
$CellContext`m})]; $CellContext`vcols = Flatten[
              Map[{# -> Orange}& , 
               
               VertexOutComponent[$CellContext`gph1, $CellContext`j1]]]; \
$CellContext`nodes = If[$CellContext`allnodes$$ == True, 
              Part[$CellContext`pool1, All, 1], 
              VertexList[$CellContext`gph1]]; $CellContext`vdim = 
            0.05 Apply[Divide, 
                Map[Apply[Subtract, 
                  MinMax[#]]& , 
                 Transpose[
                  
                  ReplaceAll[$CellContext`nodes, $CellContext`vcoords]]]]^1; \
$CellContext`cmag = Part[$CellContext`pool1, 1, 4]; Panel[
             Row[{
               Graph[$CellContext`nodes, 
                Cases[$CellContext`intsz1, ({
                    Pattern[$CellContext`e1, 
                    Blank[]], 
                    Pattern[$CellContext`e2, 
                    Blank[]]} -> True) :> 
                 DirectedEdge[$CellContext`e1, $CellContext`e2]], GraphLayout -> 
                "LinearEmbedding", VertexCoordinates -> $CellContext`vcoords, 
                VertexLabels -> "Name", 
                VertexSize -> {$CellContext`j1 -> 
                  2 $CellContext`vdim, $CellContext`vdim}, EdgeStyle -> 
                Arrowheads[0.025], VertexStyle -> $CellContext`vcols, Frame -> 
                True, FrameTicks -> True, Prolog -> {Orange, 
                  $CellContext`il[$CellContext`cmag + $CellContext`\
\[CapitalDelta]magH$$], 
                  $CellContext`il[$CellContext`cmag - $CellContext`\
\[CapitalDelta]magL$$], 
                  Line[{{
                    First[
                    
                    ReplaceAll[$CellContext`j1, $CellContext`vcoords]], \
$CellContext`cmag - $CellContext`\[CapitalDelta]magH$$}, {
                    First[
                    
                    ReplaceAll[$CellContext`j1, $CellContext`vcoords]], \
$CellContext`cmag + $CellContext`\[CapitalDelta]magH$$}}], Dashed, Black, 
                  $CellContext`il[$CellContext`magthresh$$]}, ImageSize -> 
                540], 
               Spacer[10], 
               Show[$CellContext`gph1, ImageSize -> 100]}]]], 
          Row[{
            Grid[
             Join[{{
                StringForm[
                "Mag thr: ``, \[CapitalDelta]m-: ``, \[CapitalDelta]m+: ``", \
$CellContext`magthresh$$, $CellContext`\[CapitalDelta]magL$$, $CellContext`\
\[CapitalDelta]magH$$], SpanFromLeft}}, {{
                StringForm["Removing events: ``", $CellContext`removed$$], 
                SpanFromLeft}}, {{
                StringForm["`` clusters generated", 
                 Length[$CellContext`multiplets]], SpanFromLeft}}, {{
               "elements", "clusters count"}}, 
              Sort[
               Tally[
                Map[Length, $CellContext`multiplets]]]], Frame -> All], 
            Spacer[30], 
            If[$CellContext`multiplets != {}, 
             Histogram[
              Map[Length, $CellContext`multiplets], {1}, Ticks -> {Range[
                 Floor[#], 
                 Ceiling[#2]]& , Automatic}, 
              AxesLabel -> {"elements", "clusters count"}, ImageSize -> 300], 
             
             Spacer[300]]}], 
          EventHandler[
           Labeled[
            SetterBar[
             Dynamic[$CellContext`catalogue], 
             Prepend[
              Range[$CellContext`rj], 0 -> "original"]], "Catalog randomize:",
             Left], "MouseClicked" :> {$CellContext`currmultip = 1; 
             ReleaseHold[$CellContext`clustaction]}, Method -> "Queued", 
           PassEventsDown -> True], 
          Row[{
            Button["Randomize", 
             
             If[$CellContext`rj <= 
              9, $CellContext`trand = RandomReal[$CellContext`cattspan, 
                 Length[$CellContext`orig]]; Increment[$CellContext`rj]; 
              Part[$CellContext`ts, $CellContext`rj] = $CellContext`trand; \
$CellContext`catalogue = $CellContext`rj; 
              Part[$CellContext`nts, $CellContext`rj] = FromCharacterCode[
                 RandomInteger[{65, 90}, 4]]; $CellContext`currmultip = 1; 
              ReleaseHold[$CellContext`clustaction]], Method -> "Queued"], 
            Button["Export", 
             
             Export[$CellContext`out = 
              SystemDialogInput["FileSave", FileNameJoin[{
                   FileNameDrop[$CellContext`out, -1], 
                   FileBaseName[$CellContext`file]}] <> "_" <> 
                If[$CellContext`catalogue > 0, 
                  Part[$CellContext`nts, $CellContext`catalogue], "Orig"] <> 
                ".txt"], 
              StringJoin[{
                
                StringRiffle[{
                 "filename: " <> FileBaseName[$CellContext`file] <> " (" <> 
                  ToString[
                    Length[$CellContext`data]] <> "/" <> ToString[
                    Length[$CellContext`orig]] <> " eventi utilizzati)", 
                  "catalogue: " <> If[$CellContext`catalogue > 0, 
                    Part[$CellContext`nts, $CellContext`catalogue], "Orig"], 
                  "timespan: " <> ToString[$CellContext`cattspan], 
                  "binsize: " <> ToString[$CellContext`binsize$$], 
                  StringJoin[{"magthresh: ", 
                    ToString[$CellContext`magthresh$$], " + ", 
                    ToString[$CellContext`\[CapitalDelta]magL$$], " - " <> 
                    ToString[$CellContext`\[CapitalDelta]magH$$]}], 
                  "\nvettore n. multiplette", 
                  "removed: " <> $CellContext`removed$$, 
                  "GKradius: " <> $CellContext`gkrad$$, 
                  Apply[Sequence, 
                   Map[ToString, 
                    BinCounts[
                    Part[$CellContext`clustimes, All, 1], {0, 
                    Round[
                    
                    Part[$CellContext`data, -1, 
                    1], $CellContext`binsize$$], $CellContext`binsize$$}]]]}, 
                 "\n"]}], "String"], Method -> "Queued"], 
            Button[
            "Reset", $CellContext`rj = 0; $CellContext`catalogue = 0; 
             ReleaseHold[$CellContext`clustaction], Method -> "Queued"]}]}, 
         Alignment -> Center]), "Specifications" :> {
        Button["Show catalog global info", 
         CreatePalette[
          $CellContext`infodata[$CellContext`data], WindowTitle -> 
          "catalog global info"]], {{$CellContext`timespan$$, 0.6}, -2, 
         2}, {{$CellContext`binsize$$, 1000}, {10, 20, 50, 100, 200, 500, 
         1000}, ControlType -> Setter}, 
        Delimiter, {{$CellContext`magthresh$$, 5.5, "Magnitude threshold"}, 
         ControlType -> 
         InputField}, {{$CellContext`\[CapitalDelta]magL$$, 0.5, 
          "\[CapitalDelta]mag to LOWER events"}, ControlType -> 
         InputField}, {{$CellContext`\[CapitalDelta]magH$$, 0.5, 
          "\[CapitalDelta]mag to HIGHER events"}, ControlType -> 
         InputField}, {{$CellContext`localmag$$, False}, {False, True}}, 
        Delimiter, {{$CellContext`removed$$, "GK"}, {
         "GK", "GK-Mag", "None"}}, {{$CellContext`gkrad$$, "sum"}, {
         "1st", "max", "sum"}}, 
        Button[
        "Clusterize!", {$CellContext`amag, $CellContext`amagL, \
$CellContext`amagH, $CellContext`arem, $CellContext`arad} = \
{$CellContext`magthresh$$, $CellContext`\[CapitalDelta]magL$$, $CellContext`\
\[CapitalDelta]magH$$, $CellContext`removed$$, $CellContext`gkrad$$}; 
         ReleaseHold[$CellContext`clustaction], Method -> "Queued"], 
        Button["Show counts", 
         CreateWindow[
          DocumentNotebook[
           TextCell[
            Column[{
              Labeled[
               FileBaseName[$CellContext`file], "filename", Left], 
              Labeled[
               If[$CellContext`catalogue > 0, 
                Part[$CellContext`nts, $CellContext`catalogue], "Orig"], 
               "filename", Left], 
              Labeled[$CellContext`cattspan, "timespan", Left], 
              Labeled[$CellContext`binsize$$, "binsize", Left], 
              Labeled[$CellContext`magthresh$$, "magthresh", Left], 
              
              Labeled[$CellContext`\[CapitalDelta]magL$$, "\[CapitalDelta]+", 
               Left], 
              
              Labeled[$CellContext`\[CapitalDelta]magH$$, "\[CapitalDelta]-", 
               Left], 
              TableForm[
               BinCounts[
                Part[$CellContext`clustimes, All, 1], 
                Append[$CellContext`cattspan, $CellContext`binsize$$]]]}], 
            "Text"]], WindowTitle -> "Multiplets occurrences"]], 
        Dynamic[
         Row[{
           Button[
           " < Prev Cluster  ", $CellContext`currmultip = 
             Max[$CellContext`currmultip - 1, 1]; $CellContext`t = 
             Part[$CellContext`clustimes, $CellContext`currmultip, 1]], 
           Button["  Next Cluster > ", $CellContext`currmultip = Min[
               Length[$CellContext`clustimes], $CellContext`currmultip + 
               1]; $CellContext`t = 
             Part[$CellContext`clustimes, $CellContext`currmultip, 1]]}]], 
        Delimiter, {$CellContext`view$$, {"m_Hist", "3D plot", "Graph"}, 
         ControlType -> CheckboxBar}, {$CellContext`allnodes$$, {
         True, False}}}, "Options" :> {ContinuousAction -> True}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{984., {217., 223.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8948645031454077`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"6894323f-de5a-4cf7-bf6f-c0c80afda0f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1551, 838},
WindowMargins->{{11, Automatic}, {Automatic, 21}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"38f706d4-3f17-4aa0-807b-5b6c78637493"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 233, 4, 67, "Section",ExpressionUUID->"2d257552-89d8-4824-8810-853e93dab373"],
Cell[816, 28, 514, 13, 35, "Text",ExpressionUUID->"4318576f-3a1d-429e-866c-94e506562991"],
Cell[1333, 43, 3357, 74, 110, "Input",ExpressionUUID->"dd1bbe55-77a3-4a41-877c-3a24b383fa6c",
 InitializationCell->True],
Cell[4693, 119, 1124, 27, 58, "Text",ExpressionUUID->"f0f5c79a-4225-4f7c-b31b-e7ea4bc1b21a"],
Cell[5820, 148, 4296, 121, 213, "Input",ExpressionUUID->"0c866893-59fb-4cb2-9bc2-7915aa8b5ecf",
 InitializationCell->True],
Cell[10119, 271, 1183, 36, 101, "Text",ExpressionUUID->"53333f2b-a420-4f31-b57a-3138c7e85cb2"],
Cell[11305, 309, 8898, 219, 372, "Input",ExpressionUUID->"97bec193-9865-46ce-95ac-7ab3a3e8c628",
 InitializationCell->True],
Cell[20206, 530, 3027, 72, 110, "Input",ExpressionUUID->"3dc942fb-fd55-4cbc-9f89-9bc8514c3e69",
 InitializationCell->True],
Cell[23236, 604, 601, 10, 58, "Text",ExpressionUUID->"0efbab32-beb2-40de-9109-7ef99f959725"],
Cell[23840, 616, 1985, 45, 194, "Input",ExpressionUUID->"2d1dbb5d-0816-40f9-840f-9c99ab629ba3",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[25850, 665, 493, 7, 54, "Subsection",ExpressionUUID->"0aea74f1-3b4d-4806-9847-c43ccfcc2d13"],
Cell[26346, 674, 275, 4, 35, "Text",ExpressionUUID->"2ffbe1a3-c67c-4e10-aacf-abcd7ca8914f"],
Cell[26624, 680, 14317, 326, 1023, "Input",ExpressionUUID->"f6aa0e7b-7a1f-440d-a2a0-648ee2ebed31",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40990, 1012, 271, 4, 67, "Section",ExpressionUUID->"b85a94c2-4ed1-4ae5-b912-1d425e894d28"],
Cell[CellGroupData[{
Cell[41286, 1020, 215, 4, 54, "Subsection",ExpressionUUID->"394754c4-d1b9-4b86-b464-8552fc129f62"],
Cell[41504, 1026, 653, 12, 30, "Input",ExpressionUUID->"8352a4da-6c00-4d12-b145-28b93997cc22"],
Cell[42160, 1040, 627, 12, 30, "Input",ExpressionUUID->"3cd6966a-18e9-4238-8d28-3277bc6ebe54"],
Cell[CellGroupData[{
Cell[42812, 1056, 2015, 52, 262, "Input",ExpressionUUID->"802ffbfd-7999-4f14-903d-cb185cee7a46"],
Cell[44830, 1110, 403, 6, 34, "Output",ExpressionUUID->"121c9a80-9d76-400c-aafa-200df61759bb"],
Cell[45236, 1118, 928, 24, 45, "Output",ExpressionUUID->"da11e46c-991c-4c61-be19-49091f4a9d1f"],
Cell[46167, 1144, 373, 6, 34, "Output",ExpressionUUID->"80dd75f4-0701-4de2-b3a7-b6e12c236e70"],
Cell[46543, 1152, 924, 24, 45, "Output",ExpressionUUID->"72765a55-70dd-4d4c-b698-4bd6419f3350"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[47528, 1183, 159, 3, 53, "Section",ExpressionUUID->"2fd14590-5081-42e9-96a3-df3f81ede526"],
Cell[47690, 1188, 534, 11, 104, "Text",ExpressionUUID->"8dbc9d81-b514-4f0f-af15-4497eafb8b98"],
Cell[CellGroupData[{
Cell[48249, 1203, 213, 4, 54, "Subsection",ExpressionUUID->"dd2921a5-d352-40bf-951e-6501c73d7cf6"],
Cell[48465, 1209, 1796, 49, 180, "Text",ExpressionUUID->"20a687b4-8cb9-41d0-860d-df0bb446769d"],
Cell[CellGroupData[{
Cell[50286, 1262, 5385, 118, 409, "Input",ExpressionUUID->"7df17c96-2d92-4c4a-a388-14eda996d67a"],
Cell[55674, 1382, 973, 24, 45, "Output",ExpressionUUID->"84c3a378-78fe-4158-898e-8c24be9d9f20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56684, 1411, 4841, 115, 209, "Input",ExpressionUUID->"e80b639e-162b-4d91-a0c5-e550afa3de5e"],
Cell[61528, 1528, 516, 10, 34, "Output",ExpressionUUID->"5128ddbd-ae43-4b08-b850-ff8d9518a94b"],
Cell[62047, 1540, 3018, 55, 401, "Output",ExpressionUUID->"684cd0e2-3798-4877-8a6d-739788fa73b8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65114, 1601, 1331, 19, 54, "Subsection",ExpressionUUID->"3f2329e2-c500-4bdf-aa0e-388697c101b6"],
Cell[66448, 1622, 359, 8, 35, "Text",ExpressionUUID->"ab2b8ccf-8d14-4648-af10-bd923665e986"],
Cell[CellGroupData[{
Cell[66832, 1634, 2633, 39, 73, "Input",ExpressionUUID->"b740fd49-2e43-483f-b1dd-95dc9c95132a"],
Cell[69468, 1675, 52583, 1131, 359, "Output",ExpressionUUID->"78560d80-7459-42a2-b2b2-d53aa72fd012"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122100, 2812, 221, 4, 54, "Subsection",ExpressionUUID->"beb23643-7bec-4ebe-91e6-692fb9311777"],
Cell[122324, 2818, 249, 4, 35, "Text",ExpressionUUID->"17cd7e79-31f1-4c0e-a694-1502552c3799"],
Cell[CellGroupData[{
Cell[122598, 2826, 107323, 2422, 6177, "Input",ExpressionUUID->"cb56477e-96a3-4c55-9345-4a4c951c867f"],
Cell[229924, 5250, 31745, 670, 459, "Output",ExpressionUUID->"6894323f-de5a-4cf7-bf6f-c0c80afda0f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

